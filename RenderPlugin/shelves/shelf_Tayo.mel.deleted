global proc shelf_Tayo () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 33
        -height 33
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "User Script" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "T:/Tayo/03_Pre-production/04_MelScript/Manager/Icon/tayo_manager.jpg" 
        -image1 "T:/Tayo/03_Pre-production/04_MelScript/Manager/Icon/tayo_manager.jpg" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "source \"T:/Tayo/03_Pre-production/04_MelScript/Manager/Tayo.mel\";\nManager();" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import maya.cmds as cmds\nfind = cmds.ls(sl = True)\nlist = cmds.listConnections(find[0])\ndelList = []\nfor li in list:\n    if (find[0] in li):\n        delList.append(li)\n        \ncmds.delete (delList)" 
        -enableBackground 0
        -align "center" 
        -label "import maya.cmds as cmds\nfind = cmds.ls(sl = True)\nlist = cmds.l..." 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import maya.cmds as cmds\nfind = cmds.ls(sl = True)\nlist = cmds.listConnections(find[0])\ndelList = []\nfor li in list:\n    if (find[0] in li):\n        delList.append(li)\n        \ncmds.delete (delList)" 
        -sourceType "python" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import maya.cmds as cmds\nfind = cmds.ls(sl = True)\nlist = cmds.listConnections(find[0])\ndelList = []\nfor li in list:\n    if ('blendWeighted' in li):\n        delList.append(li)\n        \ncmds.delete (delList)" 
        -enableBackground 0
        -align "center" 
        -label "import maya.cmds as cmds\nfind = cmds.ls(sl = True)\nlist = cmds.l..." 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import maya.cmds as cmds\nfind = cmds.ls(sl = True)\nlist = cmds.listConnections(find[0])\ndelList = []\nfor li in list:\n    if ('blendWeighted' in li):\n        delList.append(li)\n        \ncmds.delete (delList)" 
        -sourceType "python" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "User Script" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Gani" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "select -r Gani_root T3P_Gani_in_set_mb_P;\npointConstraint -offset 0 0 0 -weight 1;\norientConstraint -offset 0 0 0 -weight 1;\n" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "User Script" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Lani" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "select -r Lani_root T3P_Lani_in_set_mb_P;\npointConstraint -offset 0 0 0 -weight 1;\norientConstraint -offset 0 0 0 -weight 1;\n" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "User Script" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Nuri" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "select -r Nuri_root T3P_Nuri_in_set_mb_P;\npointConstraint -offset 0 0 0 -weight 1;\norientConstraint -offset 0 0 0 -weight 1;\n" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "User Script" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Rogi" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "select -r Rogi_root T3P_Rogi_in_set_mb_P;\npointConstraint -offset 0 0 0 -weight 1;\norientConstraint -offset 0 0 0 -weight 1;\n" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "User Script" 
        -enableBackground 0
        -align "center" 
        -label "User Script" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Tayo" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "select -r Tayo_root T3P_Tayo_in_set_mb_P;\npointConstraint -offset 0 0 0 -weight 1;\norientConstraint -offset 0 0 0 -weight 1;\n" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Convert selected components to selected vertex component" 
        -enableBackground 0
        -align "center" 
        -label "To Vertices" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "polyConvertToVertices.png" 
        -image1 "polyConvertToVertices.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "ConvertSelectionToVertices" 
        -sourceType "python" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Non-linear character animation editor" 
        -enableBackground 0
        -align "center" 
        -label "Trax Editor" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "TE" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "menuIconWindow.png" 
        -image1 "menuIconWindow.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "CharacterAnimationEditor" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "# -*- coding: utf-8 -*-\nimport maya.cmds as cmds\nimport os\n\ndef TransferCtrl():\n    '''创建界面'''\n\n    if cmds.window('TC_Window', ex = 1):\n        cmds.deleteUI('TC_Window')\n\n    cmds.window('TC_Window', s = 0, t = 'TransferCtrl')\n    cmds.columnLayout(adj = 1, w = 300)\n    cmds.button('设置目标对象', h = 35, c = 'TransferTarget(cmds.ls(sl = 1, tr = 1))')\n    cmds.button('移动当前对象', h = 35, c = 'TransferMove(cmds.ls(sl = 1, tr = 1))')\n    cmds.button('清除当前数据', h = 35, c = 'TransferTarget([])')\n    cmds.rowColumnLayout(nr = 1)\n    cmds.checkBox('TC_CheckT', l = '位移', v = 1)\n    cmds.checkBox('TC_CheckR', l = '旋转', v = 1)\n    cmds.checkBox('TC_CheckS', l = '缩放', v = 1)\n    cmds.checkBox('TC_CheckO', l = '其它', v = 1)\n    cmds.setParent('..')\n    cmds.setParent('..')\n    cmds.showWindow('TC_Window')\n\ndef TransferTarget(Item = []):\n    '''设置目标对象'''\n\n    Data = '//TransferCtrl Data File%s%s' % (os.linesep,os.linesep)\n    if Item != []: \n        for i in xrange(len(Item)):\n            try:\n                len(cmds.listAttr(Item[i], k = 1, u = 1, w = 1, s = 1, se = 1))\n            except:\n                continue\n            else:\n                Data += '##%s%s' % (Item[i].split(':')[-1],os.linesep)\n                Attr = cmds.listAttr(Item[i], k = 1, u = 1, w = 1, s = 1, se = 1)\n                for j in xrange(len(Attr)):\n                    Value = cmds.getAttr(Item[i] + '.' + Attr[j])\n                    buffer = [Item[i].split(':')[-1], Attr[j], str(Value)]\n                    Data += '%s%s' % (' * '.join(buffer),os.linesep)\n                Data += os.linesep\n    Data += '//End'\n    Path = cmds.internalVar(utd = 1)\n    f = open(Path + '/temp.tc', 'w')\n    f.write(Data)\n    f.close\n\ndef TransferMove(Item):\n    '''移动当前对象'''\n\n    Path = cmds.internalVar(utd = 1)\n    f = open(Path + '/temp.tc', 'r')\n    a = []\n    while True:\n        line = f.readline()\n        if len(line) == 0:\n            break\n        elif line.startswith('//') or line.startswith(os.linesep):\n            continue\n        elif line.startswith('##'):\n            a.append(line[2:-len(os.linesep)])\n        else:\n            b = line[:-len(os.linesep)].strip().split('*')\n            b = [x.strip() for x in b if x != '']\n            NS = ''\n            for x in Item:\n                if ':' in x:\n                    NS = Item[0].split(':',1)[0]\n                    break\n            if NS == '':\n                if b[0] in Item and len(Item) > 1:\n                    if 'translate' in b[1] and cmds.checkBox('TC_CheckT', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(b[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'rotate' in b[1] and cmds.checkBox('TC_CheckR', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(b[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'scale' in b[1] and cmds.checkBox('TC_CheckS', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(b[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'translate' not in b[1] and 'rotate' not in b[1] and 'scale' not in b[1] and cmds.checkBox('TC_CheckO', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(b[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                if len(a) == 1 and len(Item) == 1:\n                    if 'translate' in b[1] and cmds.checkBox('TC_CheckT', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(Item[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'rotate' in b[1] and cmds.checkBox('TC_CheckR', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(Item[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'scale' in b[1] and cmds.checkBox('TC_CheckS', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(Item[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'translate' not in b[1] and 'rotate' not in b[1] and 'scale' not in b[1] and cmds.checkBox('TC_CheckO', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(Item[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n            else:\n                if len(Item) > 1:\n                    if 'translate' in b[1] and cmds.checkBox('TC_CheckT', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(NS + ':' + b[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'rotate' in b[1] and cmds.checkBox('TC_CheckR', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(NS + ':' + b[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'scale' in b[1] and cmds.checkBox('TC_CheckS', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(NS + ':' + b[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'translate' not in b[1] and 'rotate' not in b[1] and 'scale' not in b[1] and cmds.checkBox('TC_CheckO', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(NS + ':' + b[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                elif len(a) == 1 and len(Item) == 1:\n                    if 'translate' in b[1] and cmds.checkBox('TC_CheckT', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(Item[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'rotate' in b[1] and cmds.checkBox('TC_CheckR', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(Item[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'scale' in b[1] and cmds.checkBox('TC_CheckS', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(Item[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'translate' not in b[1] and 'rotate' not in b[1] and 'scale' not in b[1] and cmds.checkBox('TC_CheckO', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(Item[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n\nTransferCtrl()\n" 
        -enableBackground 0
        -align "center" 
        -label "# -*- coding: utf-8 -*-\nimport maya.cmds as cmds\nimport os\n\ndef ..." 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "# -*- coding: utf-8 -*-\nimport maya.cmds as cmds\nimport os\n\ndef TransferCtrl():\n    '''创建界面'''\n\n    if cmds.window('TC_Window', ex = 1):\n        cmds.deleteUI('TC_Window')\n\n    cmds.window('TC_Window', s = 0, t = 'TransferCtrl')\n    cmds.columnLayout(adj = 1, w = 300)\n    cmds.button('设置目标对象', h = 35, c = 'TransferTarget(cmds.ls(sl = 1, tr = 1))')\n    cmds.button('移动当前对象', h = 35, c = 'TransferMove(cmds.ls(sl = 1, tr = 1))')\n    cmds.button('清除当前数据', h = 35, c = 'TransferTarget([])')\n    cmds.rowColumnLayout(nr = 1)\n    cmds.checkBox('TC_CheckT', l = '位移', v = 1)\n    cmds.checkBox('TC_CheckR', l = '旋转', v = 1)\n    cmds.checkBox('TC_CheckS', l = '缩放', v = 1)\n    cmds.checkBox('TC_CheckO', l = '其它', v = 1)\n    cmds.setParent('..')\n    cmds.setParent('..')\n    cmds.showWindow('TC_Window')\n\ndef TransferTarget(Item = []):\n    '''设置目标对象'''\n\n    Data = '//TransferCtrl Data File%s%s' % (os.linesep,os.linesep)\n    if Item != []: \n        for i in xrange(len(Item)):\n            try:\n                len(cmds.listAttr(Item[i], k = 1, u = 1, w = 1, s = 1, se = 1))\n            except:\n                continue\n            else:\n                Data += '##%s%s' % (Item[i].split(':')[-1],os.linesep)\n                Attr = cmds.listAttr(Item[i], k = 1, u = 1, w = 1, s = 1, se = 1)\n                for j in xrange(len(Attr)):\n                    Value = cmds.getAttr(Item[i] + '.' + Attr[j])\n                    buffer = [Item[i].split(':')[-1], Attr[j], str(Value)]\n                    Data += '%s%s' % (' * '.join(buffer),os.linesep)\n                Data += os.linesep\n    Data += '//End'\n    Path = cmds.internalVar(utd = 1)\n    f = open(Path + '/temp.tc', 'w')\n    f.write(Data)\n    f.close\n\ndef TransferMove(Item):\n    '''移动当前对象'''\n\n    Path = cmds.internalVar(utd = 1)\n    f = open(Path + '/temp.tc', 'r')\n    a = []\n    while True:\n        line = f.readline()\n        if len(line) == 0:\n            break\n        elif line.startswith('//') or line.startswith(os.linesep):\n            continue\n        elif line.startswith('##'):\n            a.append(line[2:-len(os.linesep)])\n        else:\n            b = line[:-len(os.linesep)].strip().split('*')\n            b = [x.strip() for x in b if x != '']\n            NS = ''\n            for x in Item:\n                if ':' in x:\n                    NS = Item[0].split(':',1)[0]\n                    break\n            if NS == '':\n                if b[0] in Item and len(Item) > 1:\n                    if 'translate' in b[1] and cmds.checkBox('TC_CheckT', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(b[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'rotate' in b[1] and cmds.checkBox('TC_CheckR', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(b[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'scale' in b[1] and cmds.checkBox('TC_CheckS', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(b[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'translate' not in b[1] and 'rotate' not in b[1] and 'scale' not in b[1] and cmds.checkBox('TC_CheckO', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(b[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                if len(a) == 1 and len(Item) == 1:\n                    if 'translate' in b[1] and cmds.checkBox('TC_CheckT', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(Item[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'rotate' in b[1] and cmds.checkBox('TC_CheckR', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(Item[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'scale' in b[1] and cmds.checkBox('TC_CheckS', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(Item[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'translate' not in b[1] and 'rotate' not in b[1] and 'scale' not in b[1] and cmds.checkBox('TC_CheckO', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(Item[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n            else:\n                if len(Item) > 1:\n                    if 'translate' in b[1] and cmds.checkBox('TC_CheckT', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(NS + ':' + b[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'rotate' in b[1] and cmds.checkBox('TC_CheckR', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(NS + ':' + b[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'scale' in b[1] and cmds.checkBox('TC_CheckS', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(NS + ':' + b[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'translate' not in b[1] and 'rotate' not in b[1] and 'scale' not in b[1] and cmds.checkBox('TC_CheckO', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(NS + ':' + b[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                elif len(a) == 1 and len(Item) == 1:\n                    if 'translate' in b[1] and cmds.checkBox('TC_CheckT', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(Item[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'rotate' in b[1] and cmds.checkBox('TC_CheckR', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(Item[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'scale' in b[1] and cmds.checkBox('TC_CheckS', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(Item[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n                    elif 'translate' not in b[1] and 'rotate' not in b[1] and 'scale' not in b[1] and cmds.checkBox('TC_CheckO', q = 1, v = 1):\n                        try:\n                            cmds.setAttr(Item[0] + '.' + b[1],float(b[2]))\n                        except:\n                            continue\n\nTransferCtrl()\n" 
        -sourceType "python" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "select -r Tayo_body_front_ctr ;\nselect -tgl Tayo_body_back_ctr ;\nselect -tgl Tayo_body_ro_ctr ;\nselect -tgl Tayo_body_ctr ;\nselect -tgl Tayo_L_F_limit_ctr ;\nselect -tgl Tayo_L_B_limit_ctr ;\nselect -tgl Tayo_R_B_limit_ctr ;\nselect -tgl Tayo_R_F_limit_ctr ;\nselect -tgl Tayo_tran_ctr ;\n" 
        -enableBackground 0
        -align "center" 
        -label "select -r Tayo_body_front_ctr ;\nselect -tgl Tayo_body_back_ctr ;..." 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "tayo" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "select -r Tayo_body_front_ctr ;\nselect -tgl Tayo_body_back_ctr ;\nselect -tgl Tayo_body_ro_ctr ;\nselect -tgl Tayo_body_ctr ;\nselect -tgl Tayo_L_F_limit_ctr ;\nselect -tgl Tayo_L_B_limit_ctr ;\nselect -tgl Tayo_R_B_limit_ctr ;\nselect -tgl Tayo_R_F_limit_ctr ;\nselect -tgl Tayo_tran_ctr ;\n" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "select -r Hana_CH Hana_Spline_curve_D Hana_Spline_curve_U Hana_hair_curve1 Hana_copyOfhair_curve Hana_all_body_ctr Hana_Facial_ctr Hana_eyes_ctr Hana_L_eye Hana_R_eye Hana_Cap_ctr Hana_tool1_ctr Hana_tool2_ctr Hana_chest_ctr Hana_neck_ctr Hana_L_hand_ctr Hana_L_hand_ro_ctr Hana_L_Th1_C Hana_L_Th2_C Hana_L_Th3_C Hana_L_F1_C Hana_L_F2_C Hana_L_F3_C Hana_L_S1_C Hana_L_S2_C Hana_L_S3_C Hana_L_T_palm_C Hana_L_T1_C Hana_L_T2_C Hana_L_T3_C Hana_L_L_palm_C Hana_L_L1_C Hana_L_L2_C Hana_L_L3_C Hana_R_hand_ctr Hana_R_hand_ro_ctr Hana_R_Th1_C Hana_R_Th2_C Hana_R_Th3_C Hana_R_F1_C Hana_R_F2_C Hana_R_F3_C Hana_R_S1_C Hana_R_S2_C Hana_R_S3_C Hana_R_T_palm_C Hana_R_T1_C Hana_R_T2_C Hana_R_T3_C Hana_R_L_palm_C Hana_R_L1_C Hana_R_L2_C Hana_R_L3_C Hana_front_up_ctr Hana_R_Sh_rot_ctr Hana_R_sh_ctr Hana_L_Sh_rot_ctr Hana_L_sh_ctr Hana_L_arm_Pole_ctr Hana_R_arm_Pole_ctr Hana_hip_ctr Hana_L_leg_Pole_ctr Hana_R_leg_Pole_ctr Hana_front_D_ctr Hana_middle_ctr Hana_L_foot_ctr Hana_R_foot_ctr Hana_L_hold_ctr Hana_R_hold_ctr Hana_head_ctr Hana_head_ctr|Hana_hair_ctr Hana_hair_Locator|Hana_hair_ctr ;\nselect -tgl Hana_CH ;\nselect -tgl Hana_Facial_ctr ;\nselect -tgl Hana_eyes_ctr Hana_L_eye Hana_R_eye ;\n" 
        -enableBackground 0
        -align "center" 
        -label "select -r Hana_CH Hana_Spline_curve_D Hana_Spline_curve_U Hana_h..." 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "select -r Hana_CH Hana_Spline_curve_D Hana_Spline_curve_U Hana_hair_curve1 Hana_copyOfhair_curve Hana_all_body_ctr Hana_Facial_ctr Hana_eyes_ctr Hana_L_eye Hana_R_eye Hana_Cap_ctr Hana_tool1_ctr Hana_tool2_ctr Hana_chest_ctr Hana_neck_ctr Hana_L_hand_ctr Hana_L_hand_ro_ctr Hana_L_Th1_C Hana_L_Th2_C Hana_L_Th3_C Hana_L_F1_C Hana_L_F2_C Hana_L_F3_C Hana_L_S1_C Hana_L_S2_C Hana_L_S3_C Hana_L_T_palm_C Hana_L_T1_C Hana_L_T2_C Hana_L_T3_C Hana_L_L_palm_C Hana_L_L1_C Hana_L_L2_C Hana_L_L3_C Hana_R_hand_ctr Hana_R_hand_ro_ctr Hana_R_Th1_C Hana_R_Th2_C Hana_R_Th3_C Hana_R_F1_C Hana_R_F2_C Hana_R_F3_C Hana_R_S1_C Hana_R_S2_C Hana_R_S3_C Hana_R_T_palm_C Hana_R_T1_C Hana_R_T2_C Hana_R_T3_C Hana_R_L_palm_C Hana_R_L1_C Hana_R_L2_C Hana_R_L3_C Hana_front_up_ctr Hana_R_Sh_rot_ctr Hana_R_sh_ctr Hana_L_Sh_rot_ctr Hana_L_sh_ctr Hana_L_arm_Pole_ctr Hana_R_arm_Pole_ctr Hana_hip_ctr Hana_L_leg_Pole_ctr Hana_R_leg_Pole_ctr Hana_front_D_ctr Hana_middle_ctr Hana_L_foot_ctr Hana_R_foot_ctr Hana_L_hold_ctr Hana_R_hold_ctr Hana_head_ctr Hana_head_ctr|Hana_hair_ctr Hana_hair_Locator|Hana_hair_ctr ;\nselect -tgl Hana_CH ;\nselect -tgl Hana_Facial_ctr ;\nselect -tgl Hana_eyes_ctr Hana_L_eye Hana_R_eye ;\n" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "  global proc autoTangent()\n{\n    global string $aTan_version ;\n\n    if (`window -q -ex autoTangentWin`)\n        {\n        showWindow autoTangentWin ;\n        return ;\n        }\n\n\n\t// Load Prefs\n    float $soft = 0.0 ;\n\tint $bFlatten = 0 ;\n    if(`optionVar -ex \"aTan_softness\"`)\n\t\t$soft = `optionVar -q \"aTan_softness\"` * 100.0 ;\n    if(`optionVar -ex \"aTan_flatten\"`)\n\t\t$bFlatten = `optionVar -q \"aTan_flatten\"` ;\n\n\n\t// Make Window\n    window -w 200 -h 125 -t (\"autoTangent - \"+$aTan_version) -in \"autoTangent\" autoTangentWin;\n    columnLayout ;\n    \n    separator -style \"in\" -w 200 -h 5 ; \n\tcheckBox -l \"Flatten Start/End Keys\" -v $bFlatten cbFlatten ;\n    floatSliderGrp -label \"Softness:\" -field true -min 0.0 -max 100.0 -v $soft -adj 3 -cw3 60 40 90 -cc (\"aTan_start();\") fsgSoft;\n    button -l (\"Auto Tangent Selected Keys\") -al \"center\" -w 180 -c (\"aTan_start();\") btnTan;\n    separator -style \"in\" -w 200 -h 5 ; \n    text -l (\"Copyright ?003-2005 Michael B. Comet\");\n    text -l (\"All Rights Reserved\") ;\n    \n    showWindow autoTangentWin ;\n\n}\n\n// --------------------------------------------------------------------------\n\n/*\n * aTan_start() - Wrapper for start from UI.\n */\nglobal proc aTan_start()\n{\n    float $soft = `floatSliderGrp -q -v fsgSoft` / 100.0 ;\n\tint $bFlatten = `checkBox -q -v cbFlatten` ;\n\n    // Store in option var too!\n    optionVar -fv \"aTan_softness\" $soft ;\n    optionVar -iv \"aTan_flatten\" $bFlatten ;\n\n    // Make it so!\n    aTan_smoothKeys($soft, $bFlatten) ;\n    \n}\n\n\n// --------------------------------------------------------------------------\n\n/*\n * aTan_smoothKeys() - Does actual smooth work\n */\nglobal proc aTan_smoothKeys(float $softness, int $bFlatten)\n{\n    string $curves[] = `keyframe -q -name -sl` ; // get all selected animCurve Nodes\n    string $crv ;\n    \n    waitCursor -state on ;\n    \n    \t// For each curve...\n    for ($crv in $curves)\n        {\n        \t// What key indexes 0..1..2..n for that curve are chosen?\n        \t//\n        int $idxs[] = `keyframe -q -indexValue -sl $crv` ;\n        int $idx ;\n        \n        for ($idx in $idxs)\n            {\n\t\t\t// How many keys on this curve?\n\t\t\tint $total = `keyframe -q -keyframeCount $crv` ;\n\t\t\t\n\t\t\t// Figure current Time and Value\n\t\t\t//\n\t\t\tfloat $valCs[] = `keyframe -index $idx -q -valueChange $crv` ;\n\t\t\tfloat $timeCs[] = `keyframe -index $idx -q -timeChange $crv` ;\n\t\t\t\n\t\t\tfloat $valPs[] = $valCs ;\n\t\t\tfloat $valNs[] = $valCs ;\n\t\t\tfloat $timePs[] = $timeCs ;\n\t\t\tfloat $timeNs[] = $timeCs ;\n\t\t\t\n\t\t\t// Figure prev Time and Value\n\t\t\t//\n\t\t\tif ($idx > 0)\n\t\t\t\t{\n\t\t\t$valPs = `keyframe -index ($idx-1) -q -valueChange $crv` ;\n\t\t\t$timePs = `keyframe -index ($idx-1) -q -timeChange $crv` ;\n\t\t\t}\n\t\t\t   \n\t\t\t// Figure next Time and Value\n\t\t\t//\n\t\t\tif ($idx < $total-1)\n\t\t\t\t{\n\t\t\t$valNs = `keyframe -index ($idx+1) -q -valueChange $crv` ;\n\t\t\t$timeNs = `keyframe -index ($idx+1) -q -timeChange $crv` ;\n\t\t\t}\n\t\t\t\n\t\t\tfloat $valC = $valCs[0] ;\n\t\t\tfloat $valP = $valPs[0] ;\n\t\t\tfloat $valN = $valNs[0] ;\n\t\t\tfloat $timeC = $timeCs[0] ;\n\t\t\tfloat $timeP = $timePs[0] ;\n\t\t\tfloat $timeN = $timeNs[0] ;\n\t\t\t\n\t\t\t// Make start/end keys nice and not flat\n\t\t\tif ($idx == 0 && !$bFlatten)\n\t\t\t\t{\n\t\t\t\t$timeP = $timeC - ($timeN - $timeC) ;\n\t\t\t\t$valP = $valC - ($valN - $valC) ;\n\t\t\t\t}\n\t\t\telse if ($idx == ($total-1) && !$bFlatten)\n\t\t\t\t{\n\t\t\t\t$timeN = $timeC + ($timeC - $timeP) ;\n\t\t\t\t$valN = $valC + ($valC - $valP) ;\n\t\t\t\t}\n\t\t\t\t\n\t\n\t\t\t// Now we have all the basic data we need of current and prev and next\n\t\t\t// key times and values... so use that to adjust the current tangents.\n\t\t\t//\n\t//\t    print (\"// valC=\"+$valC+\" timeC=\"+$timeC+\" //\\n\") ;\n\t//\t    print (\"// valP=\"+$valP+\" timeP=\"+$timeP+\" //\\n\") ;\n\t//\t    print (\"// valN=\"+$valN+\" timeN=\"+$timeN+\" //\\n\") ;\n\t\n\t\t\t// Compare changes in value\n\t\t\tfloat $valIn = $valC - $valP ;\n\t\t\tfloat $valOut = $valN - $valC ;\n\t\n\t\t\t// Compare changes in time\n\t\t\tfloat $timeIn = $timeC - $timeP ;\n\t\t\tfloat $timeOut = $timeN - $timeC ;\n\t\t\t\n\t\t\t\t// Figure slopes\n\t\t\tfloat $slopeIn = 0 ;\n\t\t\tfloat $slopeOut = 0 ;\n\t\t\tif ($timeIn != 0)\n\t\t\t\t$slopeIn = $valIn / $timeIn ;\n\t\t\tif ($timeOut != 0)\n\t\t\t\t$slopeOut = $valOut / $timeOut ;\n\t\n\t//\t    print (\"// slopeIn=\"+$slopeIn+\" slopeOut=\"+$slopeOut+\" //\\n\") ;\t\n\t\n\t\t\t   // Now set power to be more of whichever one has LESS slope\n\t\t\tfloat $powIn = 0.5, $powOut = 0.5;\n\t\t\t\n\t\t\tif ($slopeIn + $slopeOut != 0)\n\t\t\t\t$powIn = 1.0 - ( abs($slopeIn) / ( abs($slopeIn) + abs($slopeOut) ) ) ;\n\t\t\t$powOut = 1.0 - $powIn ;\n\t\n\t\t\t// Now use softness value so that as it goes to 1, we reset the\n\t\t\t// weight power evenly to 0.5... so that it becomes more like smooth.\n\t\t\t//\n\t\t\t$powIn = ((1.0 - $softness) * $powIn ) + ($softness * 0.5) ;\n\t\t\t$powOut = ((1.0 - $softness) * $powOut ) + ($softness * 0.5) ;\n\t\n\t//\t    print (\"// powIn=\"+$powIn+\" powOut=\"+$powOut+\" //\\n\") ;\t\n\t\t\n\t\t\tfloat $newSlope = ( $powIn * $slopeIn ) + ( $powOut * $slopeOut ) ;\n\t\n\t//\t    print (\"// newSlope=\"+$newSlope+\" //\\n\") ;\t\n\t\t\t\n\t\t\tfloat $ang = atan( $newSlope ) * 180.0 / 3.14159 ;\n\t\n\t//\t    print (\"// ang=\"+$ang+\" //\\n\") ;\t\n\t\t\t\n\t\t\t\t// Update the tangents\n\t\t\tkeyTangent -itt spline -ott spline -time $timeC $crv ;\n\t\t\tkeyTangent -ia $ang -oa $ang -time $timeC $crv ;\n\t\t\t\n\t\t\t\t// Also does this use weighted tangents?\n\t\t\tint $wts[] = `keyTangent -q -wt $crv` ;\n\t\t\tif ($wts[0] == 1)\n\t\t\t\t{\n\t\t\t\tfloat $inWt = abs($timeIn) / 3.0 ;\n\t\t\t\tfloat $outWt = abs($timeOut) / 3.0 ;\n\t\t\t\tkeyTangent -iw $inWt -ow $outWt -time $timeC $crv ;\n\t\t\t\t}\n\t\t\t}\t// end of each idx\n    \n        } // end of each curve\n    \n    waitCursor -state off ;\n    \n    print (\"// autoTangent Done. //\\n\") ;\n    \n}\n\nautoTangent();" 
        -enableBackground 0
        -align "center" 
        -label "  global proc autoTangent()\n{\n    global string $aTan_version ;\n..." 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "phqx" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "  global proc autoTangent()\n{\n    global string $aTan_version ;\n\n    if (`window -q -ex autoTangentWin`)\n        {\n        showWindow autoTangentWin ;\n        return ;\n        }\n\n\n\t// Load Prefs\n    float $soft = 0.0 ;\n\tint $bFlatten = 0 ;\n    if(`optionVar -ex \"aTan_softness\"`)\n\t\t$soft = `optionVar -q \"aTan_softness\"` * 100.0 ;\n    if(`optionVar -ex \"aTan_flatten\"`)\n\t\t$bFlatten = `optionVar -q \"aTan_flatten\"` ;\n\n\n\t// Make Window\n    window -w 200 -h 125 -t (\"autoTangent - \"+$aTan_version) -in \"autoTangent\" autoTangentWin;\n    columnLayout ;\n    \n    separator -style \"in\" -w 200 -h 5 ; \n\tcheckBox -l \"Flatten Start/End Keys\" -v $bFlatten cbFlatten ;\n    floatSliderGrp -label \"Softness:\" -field true -min 0.0 -max 100.0 -v $soft -adj 3 -cw3 60 40 90 -cc (\"aTan_start();\") fsgSoft;\n    button -l (\"Auto Tangent Selected Keys\") -al \"center\" -w 180 -c (\"aTan_start();\") btnTan;\n    separator -style \"in\" -w 200 -h 5 ; \n    text -l (\"Copyright ?003-2005 Michael B. Comet\");\n    text -l (\"All Rights Reserved\") ;\n    \n    showWindow autoTangentWin ;\n\n}\n\n// --------------------------------------------------------------------------\n\n/*\n * aTan_start() - Wrapper for start from UI.\n */\nglobal proc aTan_start()\n{\n    float $soft = `floatSliderGrp -q -v fsgSoft` / 100.0 ;\n\tint $bFlatten = `checkBox -q -v cbFlatten` ;\n\n    // Store in option var too!\n    optionVar -fv \"aTan_softness\" $soft ;\n    optionVar -iv \"aTan_flatten\" $bFlatten ;\n\n    // Make it so!\n    aTan_smoothKeys($soft, $bFlatten) ;\n    \n}\n\n\n// --------------------------------------------------------------------------\n\n/*\n * aTan_smoothKeys() - Does actual smooth work\n */\nglobal proc aTan_smoothKeys(float $softness, int $bFlatten)\n{\n    string $curves[] = `keyframe -q -name -sl` ; // get all selected animCurve Nodes\n    string $crv ;\n    \n    waitCursor -state on ;\n    \n    \t// For each curve...\n    for ($crv in $curves)\n        {\n        \t// What key indexes 0..1..2..n for that curve are chosen?\n        \t//\n        int $idxs[] = `keyframe -q -indexValue -sl $crv` ;\n        int $idx ;\n        \n        for ($idx in $idxs)\n            {\n\t\t\t// How many keys on this curve?\n\t\t\tint $total = `keyframe -q -keyframeCount $crv` ;\n\t\t\t\n\t\t\t// Figure current Time and Value\n\t\t\t//\n\t\t\tfloat $valCs[] = `keyframe -index $idx -q -valueChange $crv` ;\n\t\t\tfloat $timeCs[] = `keyframe -index $idx -q -timeChange $crv` ;\n\t\t\t\n\t\t\tfloat $valPs[] = $valCs ;\n\t\t\tfloat $valNs[] = $valCs ;\n\t\t\tfloat $timePs[] = $timeCs ;\n\t\t\tfloat $timeNs[] = $timeCs ;\n\t\t\t\n\t\t\t// Figure prev Time and Value\n\t\t\t//\n\t\t\tif ($idx > 0)\n\t\t\t\t{\n\t\t\t$valPs = `keyframe -index ($idx-1) -q -valueChange $crv` ;\n\t\t\t$timePs = `keyframe -index ($idx-1) -q -timeChange $crv` ;\n\t\t\t}\n\t\t\t   \n\t\t\t// Figure next Time and Value\n\t\t\t//\n\t\t\tif ($idx < $total-1)\n\t\t\t\t{\n\t\t\t$valNs = `keyframe -index ($idx+1) -q -valueChange $crv` ;\n\t\t\t$timeNs = `keyframe -index ($idx+1) -q -timeChange $crv` ;\n\t\t\t}\n\t\t\t\n\t\t\tfloat $valC = $valCs[0] ;\n\t\t\tfloat $valP = $valPs[0] ;\n\t\t\tfloat $valN = $valNs[0] ;\n\t\t\tfloat $timeC = $timeCs[0] ;\n\t\t\tfloat $timeP = $timePs[0] ;\n\t\t\tfloat $timeN = $timeNs[0] ;\n\t\t\t\n\t\t\t// Make start/end keys nice and not flat\n\t\t\tif ($idx == 0 && !$bFlatten)\n\t\t\t\t{\n\t\t\t\t$timeP = $timeC - ($timeN - $timeC) ;\n\t\t\t\t$valP = $valC - ($valN - $valC) ;\n\t\t\t\t}\n\t\t\telse if ($idx == ($total-1) && !$bFlatten)\n\t\t\t\t{\n\t\t\t\t$timeN = $timeC + ($timeC - $timeP) ;\n\t\t\t\t$valN = $valC + ($valC - $valP) ;\n\t\t\t\t}\n\t\t\t\t\n\t\n\t\t\t// Now we have all the basic data we need of current and prev and next\n\t\t\t// key times and values... so use that to adjust the current tangents.\n\t\t\t//\n\t//\t    print (\"// valC=\"+$valC+\" timeC=\"+$timeC+\" //\\n\") ;\n\t//\t    print (\"// valP=\"+$valP+\" timeP=\"+$timeP+\" //\\n\") ;\n\t//\t    print (\"// valN=\"+$valN+\" timeN=\"+$timeN+\" //\\n\") ;\n\t\n\t\t\t// Compare changes in value\n\t\t\tfloat $valIn = $valC - $valP ;\n\t\t\tfloat $valOut = $valN - $valC ;\n\t\n\t\t\t// Compare changes in time\n\t\t\tfloat $timeIn = $timeC - $timeP ;\n\t\t\tfloat $timeOut = $timeN - $timeC ;\n\t\t\t\n\t\t\t\t// Figure slopes\n\t\t\tfloat $slopeIn = 0 ;\n\t\t\tfloat $slopeOut = 0 ;\n\t\t\tif ($timeIn != 0)\n\t\t\t\t$slopeIn = $valIn / $timeIn ;\n\t\t\tif ($timeOut != 0)\n\t\t\t\t$slopeOut = $valOut / $timeOut ;\n\t\n\t//\t    print (\"// slopeIn=\"+$slopeIn+\" slopeOut=\"+$slopeOut+\" //\\n\") ;\t\n\t\n\t\t\t   // Now set power to be more of whichever one has LESS slope\n\t\t\tfloat $powIn = 0.5, $powOut = 0.5;\n\t\t\t\n\t\t\tif ($slopeIn + $slopeOut != 0)\n\t\t\t\t$powIn = 1.0 - ( abs($slopeIn) / ( abs($slopeIn) + abs($slopeOut) ) ) ;\n\t\t\t$powOut = 1.0 - $powIn ;\n\t\n\t\t\t// Now use softness value so that as it goes to 1, we reset the\n\t\t\t// weight power evenly to 0.5... so that it becomes more like smooth.\n\t\t\t//\n\t\t\t$powIn = ((1.0 - $softness) * $powIn ) + ($softness * 0.5) ;\n\t\t\t$powOut = ((1.0 - $softness) * $powOut ) + ($softness * 0.5) ;\n\t\n\t//\t    print (\"// powIn=\"+$powIn+\" powOut=\"+$powOut+\" //\\n\") ;\t\n\t\t\n\t\t\tfloat $newSlope = ( $powIn * $slopeIn ) + ( $powOut * $slopeOut ) ;\n\t\n\t//\t    print (\"// newSlope=\"+$newSlope+\" //\\n\") ;\t\n\t\t\t\n\t\t\tfloat $ang = atan( $newSlope ) * 180.0 / 3.14159 ;\n\t\n\t//\t    print (\"// ang=\"+$ang+\" //\\n\") ;\t\n\t\t\t\n\t\t\t\t// Update the tangents\n\t\t\tkeyTangent -itt spline -ott spline -time $timeC $crv ;\n\t\t\tkeyTangent -ia $ang -oa $ang -time $timeC $crv ;\n\t\t\t\n\t\t\t\t// Also does this use weighted tangents?\n\t\t\tint $wts[] = `keyTangent -q -wt $crv` ;\n\t\t\tif ($wts[0] == 1)\n\t\t\t\t{\n\t\t\t\tfloat $inWt = abs($timeIn) / 3.0 ;\n\t\t\t\tfloat $outWt = abs($timeOut) / 3.0 ;\n\t\t\t\tkeyTangent -iw $inWt -ow $outWt -time $timeC $crv ;\n\t\t\t\t}\n\t\t\t}\t// end of each idx\n    \n        } // end of each curve\n    \n    waitCursor -state off ;\n    \n    print (\"// autoTangent Done. //\\n\") ;\n    \n}\n\nautoTangent();" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "///////////////////////////////////\n//                                           //\n//     cMotionTrail. 中文版       //\n//                                          //\n//////////////////////////////////\n\n// overview: creates updating motion trails with spacer objects.\n\n// install: copy script into local scripts folder, source the script ( or restart maya ),  type \"cMotionTrailUI\" to launch the script.\n\n// Arguments: \"cMotionTrail\" int `start time` , int `end time`, float `spacer scale`, string `object to trail`,  int `set template` ( 0 or 1 ).\n\n// Written by Cameron Fielding : cameron.fielding@bvg.com \n\n// Tested with Maya 2008 X64\n\n// --------------------------------------------------------------------------------------------------------------------------------------------\n\n\n\n// proc to create the UI //\n\n\nglobal proc cMotionTrailUI()\n{\n\nif (`window -exists cMTrailWin`)\n\tdeleteUI -window cMTrailWin;\t\n\t\t\t\nif (`windowPref -exists cMTrailWin`) \n\twindowPref -remove cMTrailWin;\t\n\nwindow -t \"cMotionTrail\" -w 562 -h 350 cMTrailWin;\n\nformLayout cMtopForm;\n\nrowColumnLayout -nc 3 -cw 1 65 -cw 2 150 -cw 3 100 cMrow1;\n\n\ttext -l \"时间范围\";\n\tradioCollection cMraiod1;\n\n\t\t$cMradio1_1 = `radioButton -label \"设置开始帧与结束帧\"`;\n\t\t$cMradio1_2 = `radioButton -label \"使用时间轴长度\"`;\n\n\tradioCollection -e -select $cMradio1_2 cMraiod1;\n\t\nsetParent cMtopForm;\n\nrowColumnLayout -nc 2 -cw 1 55 -cw 2 80 cMrow2;\n\n\ttext -l \"开始帧\";\n\ttextField -text \"1\" cMstart;\n\ttext -l \"结束帧\";\n\ttextField -text \"30\" cMend;\n\nsetParent cMtopForm;\n\nframeLayout -bs \"out\" -h 2 cMSep1;\n\nsetParent cMtopForm;\n\t\n \tfloatSliderGrp -pre 2 -label \"定位点大小\" -field true -minValue 0.01 -maxValue 10 -v 0.01 cMslide;\n\t\n\tcheckBox -l \"设置曲线不可选\" -v 0 cMcbox;\n\n\tcolorIndexSliderGrp -label \"曲线颜色\" -min 0 -max 31 -value 14 -en true cMslide2;\n\n\tcheckBox -l \"设置曲线颜色和物体颜色相同\" -v 0 cMcbox2;\n\n\tcheckBox -l \"设置曲线和物体同时显示和隐藏\" -v 0 cMcbox3;\n\n\tcheckBox -l \"设置定位点为小球\" -v 1 cMcbox4;\n\n\tcolorIndexSliderGrp -label \"定位点颜色\" -min 0 -max 31 -value 17 -en true cMslide3;\n\n\nrowColumnLayout -nc 3 -cw 1 180 -cw 2 180 -cw 3 180 cMbutrow;\n\nbutton -l \"创建曲线\" -c \"getcMPrefs 1\" -h 27 ;\nbutton -l \"应用\" -c \"getcMPrefs 0\";\nbutton -l \"关闭\" -c \"deleteUI cMTrailWin\";\n\nsetParent cMtopForm;\n\nformLayout -e\n\n\t-attachForm cMrow1 \"left\" 100\n\t-attachForm cMrow1 \"top\" 3\n\n\t-attachForm cMrow2 \"left\" 111\n\t-attachForm cMrow2 \"top\" 20\n\n\t-attachForm cMSep1 \"left\" 0\n\t-attachForm cMSep1 \"right\" 0\n\t-attachForm cMSep1 \"top\" 70\n\n\t-attachForm cMslide \"left\" 25\n\t-attachForm cMslide \"top\" 78\n\n\t-attachForm cMslide2 \"left\" 25\n\t-attachForm cMslide2 \"top\" 104\n\t-attachForm cMslide2 \"right\" 140\n\n\t-attachForm cMslide3 \"left\" 25\n\t-attachForm cMslide3 \"top\" 131\n\n\t-attachForm cMcbox \"left\" 164\n\t-attachForm cMcbox \"top\" 177\n\n\t-attachForm cMcbox2 \"left\" 164\n\t-attachForm cMcbox2 \"top\" 159\n\n\t-attachForm cMcbox3 \"left\" 164\n\t-attachForm cMcbox3 \"top\" 196\n\n\t-attachForm cMcbox4 \"left\" 164\n\t-attachForm cMcbox4 \"top\" 215\n\n\t-attachForm cMbutrow \"left\" 5\n\t-attachForm cMbutrow \"bottom\" 5\n\ncMtopForm;\n\nshowWindow;\n\nwindow -e -h 290 cMTrailWin;\n\n}\n\n\n// proc to launch the main function with flags from the UI //\n\n\nglobal proc getcMPrefs( int $closecMwin )\n{\n\n\tint $startTime, $endTime, $template;\n\tfloat $scale;\n\tstring  $trailObjects[];\n\n\n\t\n\tif ( `radioCollection -q -sl cMraiod1` == \"radioButton1\" )\n\t{\n\t\t$startTime = `textField -q -text cMstart`;\n\t\t$endTime = `textField -q -text cMend`;\n\t}\n\telse\n\t{\n\t\t$startTime = `playbackOptions -q -min`;\n\t\t$endTime = `playbackOptions -q -max`;\n\t}\n\n\t$template = `checkBox -q -v cMcbox`;\n\n\t$scale = `floatSliderGrp -q -v cMslide`;\n\n\t$trailObjects = `ls -sl -fl`;\n\n\n\tfor ( $trailObject in $trailObjects )\n\t{\t\n\n\t\tif ( `objExists ( $trailObject + \"_extraNode_t\" + $startTime + $endTime )` == 0 )\n\t\t{\n\t\t\tcMotionTrail $startTime $endTime $scale $trailObject $template;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcatch ( error ( \"a trail already exists for \" + $trailObject + \" from frames \" + $startTime + \" to \" + $endTime ));\n\t\t}\t\n\t}\n\n\tif ( $closecMwin == 1 )\n\t{\n\t\tdeleteUI cMTrailWin;\n\t}\n\n}\n\n// main trail creating proc //\n\n\nglobal proc cMotionTrail ( int $startTime, int $endTime, float $scale, string $trailObject, int $template )\n{\n\n\n// get the name of the object thats going to be trailed, and the trail length //\n\n\nstring $originalName = $trailObject;\n\nint $totalTime = $endTime - $startTime;\n\n$totalTime ++;\n\n\n// clear the array that will be used to group everything together,  and create its index clock that will manage its members //\n\n\tstring $groupArray[];\n\tclear $groupArray;\n\tint $gAClock = 0;\n\n\n// create the extra node needed ( I'm not sure why this node is needed - but it seems that the `getAttr -t` function needs it to successfully evaluate the \n// position of the hiddenTrailObject, when the object being trailed is not a direct child of the world )\n\n\n\t\tgroup -w -em -n ( $trailObject + \"_extraNode_t\" + $startTime + $endTime );\n\n\t\tpointConstraint -offset 0 0 0 -weight 1 $trailObject ( $trailObject + \"_extraNode_t\" + $startTime + $endTime );\n\n\t\t$groupArray[$gAClock] = ( $trailObject + \"_extraNode_t\" + $startTime + $endTime );\n\t\t$gAClock ++;\n\n\t\t$trailObject = ( $trailObject + \"_extraNode_t\" + $startTime + $endTime );\n\n\t\n// create the hidden trail object that will be sampled // \n// note: this is the actual object that the script uses to generate and alter the shape of the cMotion trail. NOT the object the user selected.\n\n\t\n\t\tgroup -w -em -n ( $originalName + \"_hiddenTrailObject_t\" + $startTime + $endTime  );\n\n\t\tconnectAttr ( $originalName + \"_extraNode_t\" + $startTime + $endTime +  \".translateX\" ) ( $originalName + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \".translateX\" );\n\t\tconnectAttr ( $originalName + \"_extraNode_t\" + $startTime + $endTime +  \".translateY\" ) ( $originalName + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \".translateY\" );\n\t\tconnectAttr ( $originalName + \"_extraNode_t\" + $startTime + $endTime +  \".translateZ\" ) ( $originalName + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \".translateZ\" );\n\n\t\t$groupArray[$gAClock] = ( $originalName + \"_hiddenTrailObject_t\" + $startTime + $endTime  );\n\n\t\t$gAClock ++;\n\n\n// prepare the curve data // \n\n\n\t\tfloat $tPosX[], $tPosY[], $tPosZ[];\n\n\t\tclear $tPosX $tPosY $tPosZ;\n\n\t\tint $cMclock = $startTime;\n\n\t\tfor ( $i = 0; $i < $totalTime; $i ++ )\n\t\t{\n\t\t\t$tPosX[$i] = `getAttr -t $cMclock ( $originalName + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \".translateX\" )`;\n\t\t\t$tPosY[$i] = `getAttr -t $cMclock ( $originalName + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \".translateY\" )`;\n\t\t\t$tPosZ[$i] = `getAttr -t $cMclock ( $originalName + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \".translateZ\" )`;\n\n\t\t\t$cMclock ++;\n\t\t}\n\n\t\t\n// create the eval string, and evaluate it to generate the curve // \n\n\n\t\t\tstring $evalMe = \"curve -d 1 \";\n\n\t\t\tint $cMclock = $startTime;\n\n\t\t\tfor ( $i = 0; $i < `size $tPosX`; $i ++ )\n\t\t\t{\n\t\n\t\t\t\t$evalMe = ( $evalMe + \"-p \" + $tPosX[$i] + \" \" + $tPosY[$i] + \" \" + $tPosZ[$i] + \" \" );\n\n\t\t\t}\t\n\n\t\t\t$evalMe = ( $evalMe + \"-n \" + $trailObject + \"_cMotionTrail_curve\" );\n\n\t\t\teval $evalMe;\t\n\n\t\t\t$groupArray[$gAClock] = ( $trailObject + \"_cMotionTrail_curve\" );\n\t\t\t$gAClock ++;\n\n\t\t\t// lock the curve so it cant be accidently moved ( only the group as a whole can be user manipulated );\n\n\t\t\tsetAttr -lock true ( $trailObject + \"_cMotionTrail_curve.tx\" );\n\t\t\tsetAttr -lock true ( $trailObject + \"_cMotionTrail_curve.ty\" );\n\t\t\tsetAttr -lock true ( $trailObject + \"_cMotionTrail_curve.tz\" );\n\n\t\t\tsetAttr -lock true ( $trailObject + \"_cMotionTrail_curve.rx\" );\n\t\t\tsetAttr -lock true ( $trailObject + \"_cMotionTrail_curve.ry\" );\n\t\t\tsetAttr -lock true ( $trailObject + \"_cMotionTrail_curve.rz\" );\n\n\t\t\tsetAttr -lock true ( $trailObject + \"_cMotionTrail_curve.sx\" );\n\t\t\tsetAttr -lock true ( $trailObject + \"_cMotionTrail_curve.sy\" );\n\t\t\tsetAttr -lock true ( $trailObject + \"_cMotionTrail_curve.sz\" );\n\n\t\t\t// set the user colours of the curve\n\n\t\t\tsetAttr ( $trailObject + \"_cMotionTrail_curve.overrideEnabled\" ) 1;\n\t\t\tsetAttr ( $trailObject + \"_cMotionTrail_curve.overrideColor\" ) ( (`colorIndexSliderGrp -q -value cMslide2`) - 1 );\n\n\n\n\t\t\t// if the user chose `use object colour` and object has override enabled - set its colour //\n\n\t\t\t\tif ( `checkBox -q -v cMcbox2` == 1 || ($originalName + \".overrideEnabled\") == 1 )\n\t\t\t\t{\n\t\t\t\t\tsetAttr ( $trailObject + \"_cMotionTrail_curve.overrideColor\" ) ( `getAttr ( $originalName + \".overrideColor\" )`);\n\t\t\t\t}\n\n\n// rename the curve's shape node for easy access // \n\n\n\t\t\tstring $findShape[];\n\n\t\t\t$findShape = `listRelatives ( $trailObject + \"_cMotionTrail_curve\" )`;\n\n\t\t\trename $findShape[0] ( $trailObject + \"_cMotionTrailShape\" );\n\n\n// create the eval string to make the scriptjob that will update each CV position on the curve // \n\n\n\t\t\tstring $evalMeExpr = \"\";\n\n\t\t\tint $cMclock = $startTime;\n\n\t\t\tfor ( $i = 0; $i < `size $tPosX `; $i ++ )\n\t\t\t{\n\n\t\t\t\t$evalMeExpr = ( $evalMeExpr + \"setAttr \\\\\\\"\" + $trailObject + \"_cMotionTrailShape\" + \".controlPoints[\" + $i + \"].xValue\\\\\\\" ( `getAttr -t \" + $cMclock + \" \" + $trailObject + \".tx`);\" );\n\t\t\t\t$evalMeExpr = ( $evalMeExpr + \"setAttr \\\\\\\"\" + $trailObject + \"_cMotionTrailShape\" + \".controlPoints[\" + $i + \"].yValue\\\\\\\" ( `getAttr -t \" + $cMclock + \" \" + $trailObject + \".ty`);\" );\n\t\t\t\t$evalMeExpr = ( $evalMeExpr + \"setAttr \\\\\\\"\" + $trailObject + \"_cMotionTrailShape\" + \".controlPoints[\" + $i + \"].zValue\\\\\\\" ( `getAttr -t \" + $cMclock + \" \" + $trailObject + \".tz`);\" );\n\t\t\t\t\n\t\t\t\t$cMclock ++;\n\t\t\t}\n\n\n\t\t\t// create the scriptJob to connect the update to a change in the trail null's translate attributes //\n\n\t\t\t// note: for efficiency this scriptjob checks the current frame number and compares it with a previous stored frame number ( from a dynamically generated\n\t\t\t// global variable ). The scriptjob will only run if these 2 values are the same ( so the scriptJob will ONLY evaluate when the user physically makes a \n\t\t\t// change in the scene, rather than evaluating each time the user scrubs the timeslider, or steps through the timeSlider. )\n\t\t\n\t\t\tint $randTag = `rand 999999`;\n\n\t\t\t$evalMeExpr = ( \"$cmtsc\" + $randTag + \"_sJob1 = `scriptJob -kws -cu true -ac \\\"\" + $originalName + \"_hiddenTrailObject_t\" + $startTime + $endTime + \".translate\\\" \\\"\" + \n\n\t\t\t\"global int $cmtscDG\" + $randTag + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \"r2; $r1 = `currentTime -q`; if ( $r1 == $cmtscDG\" + $randTag + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \"r2 ) {\" + $evalMeExpr); \n\n\t\t\t$evalMeExpr = ( $evalMeExpr + \" print \\\\\\\"\\\\\\\";  }else{ $cmtscDG\" + $randTag + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \"r2 = `currentTime -q`; } \\\"`\" );\n\n\t\t\teval $evalMeExpr;\n\n\n\n// create the spacing locators and connect them to each point on the curve // \n\n// note: for efficiency, the spacing locators are connected directly to each CV in the curve, much faster than depending on the scriptJob \n// to also update all their positions.\n\n\n\t\t\tint $cMclock = $startTime;\n\n\t\t\tfor ( $i = 0; $i < `size $tPosX `; $i ++ )\n\t\t\t{\n\n\t\t\t\t$tPosX[$i] = `getAttr -t $startTime ( $originalName + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \".translateX\" )`;\n\t\t\t\t$tPosY[$i] = `getAttr -t $startTime ( $originalName + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \".translateY\" )`;\n\t\t\t\t$tPosZ[$i] = `getAttr -t $startTime ( $originalName + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \".translateX\" )`;\n\t\t\t\t\n\n\t\t\t\tif ( `checkBox -q -v cMcbox4` == 0 )\n\t\t\t\t{\n\t\t\t\t\tspaceLocator -n ( $trailObject + \"_spacingLocator_\" + $i );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsphere -p 0 0 0 -ax 0 1 0 -ssw 0 -esw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 4 -nsp 2 -ch 1 -n ( $trailObject + \"_spacingLocator_\" + $i );\n\t\t\t\t\tsetAttr ( $trailObject + \"_spacingLocator_\" + $i + \".overrideShading\" ) 0 ;\n\t\t\t\t}\n\t\n\t\t\t\tscale -r $scale $scale $scale;\n\n\t\t\t\txform -ws -t $tPosX[$i] $tPosY[$i] $tPosZ[$i];\t\n\n\t\t\t\tconnectAttr  ( $trailObject + \"_cMotionTrailShape\" + \".controlPoints[\" + $i + \"].xValue\" ) ( $trailObject + \"_spacingLocator_\" + $i + \".tx\" );\n\t\t\t\tconnectAttr  ( $trailObject + \"_cMotionTrailShape\" + \".controlPoints[\" + $i + \"].yValue\" ) ( $trailObject + \"_spacingLocator_\" + $i + \".ty\" );\n\t\t\t\tconnectAttr  ( $trailObject + \"_cMotionTrailShape\" + \".controlPoints[\" + $i + \"].zValue\" ) ( $trailObject + \"_spacingLocator_\" + $i + \".tz\" );\t\n\n\t\t\t\t$groupArray[$gAClock] = ( $trailObject + \"_spacingLocator_\" + $i );\n\t\t\t\t$gAClock ++;\n\n\t\t\t\t$cMclock ++;\n\n\t\t\t\tsetAttr ( $trailObject + \"_spacingLocator_\" + $i + \".overrideEnabled\" ) 1;\n\t\t\t\tsetAttr ( $trailObject + \"_spacingLocator_\" + $i + \".overrideColor\" ) ( (`colorIndexSliderGrp -q -value cMslide3`) - 1 );\n\t\t\t}\n\n\n// create the final group of everything that was created, and set its user template value //\n\n\n\t\tselect -r $groupArray;\n\t\tgroup -n ( $originalName + \"_cMotionTrail_\" + $startTime + \"to\" + $endTime ); \n\n\t\tsetAttr ( $originalName + \"_cMotionTrail_\" + $startTime + \"to\" + $endTime + \".template\") $template;\n\t\tselect -cl;\n\n\t\tif ( `checkBox -q -v cMcbox3` == 1 )\n\t\t{\n\t\t\tcatch ( `connectAttr ( $originalName + \".visibility\" ) ( $originalName + \"_cMotionTrail_\" + $startTime + \"to\" + $endTime + \".visibility \") `);\n\t\t}\n\n}\ncMotionTrailUI;\n" 
        -enableBackground 0
        -align "center" 
        -label "///////////////////////////////////\n//                          ..." 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "E:/tayo3/cMotionTrailUI.bmp" 
        -image1 "E:/tayo3/cMotionTrailUI.bmp" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "///////////////////////////////////\n//                                           //\n//     cMotionTrail. 中文版       //\n//                                          //\n//////////////////////////////////\n\n// overview: creates updating motion trails with spacer objects.\n\n// install: copy script into local scripts folder, source the script ( or restart maya ),  type \"cMotionTrailUI\" to launch the script.\n\n// Arguments: \"cMotionTrail\" int `start time` , int `end time`, float `spacer scale`, string `object to trail`,  int `set template` ( 0 or 1 ).\n\n// Written by Cameron Fielding : cameron.fielding@bvg.com \n\n// Tested with Maya 2008 X64\n\n// --------------------------------------------------------------------------------------------------------------------------------------------\n\n\n\n// proc to create the UI //\n\n\nglobal proc cMotionTrailUI()\n{\n\nif (`window -exists cMTrailWin`)\n\tdeleteUI -window cMTrailWin;\t\n\t\t\t\nif (`windowPref -exists cMTrailWin`) \n\twindowPref -remove cMTrailWin;\t\n\nwindow -t \"cMotionTrail\" -w 562 -h 350 cMTrailWin;\n\nformLayout cMtopForm;\n\nrowColumnLayout -nc 3 -cw 1 65 -cw 2 150 -cw 3 100 cMrow1;\n\n\ttext -l \"时间范围\";\n\tradioCollection cMraiod1;\n\n\t\t$cMradio1_1 = `radioButton -label \"设置开始帧与结束帧\"`;\n\t\t$cMradio1_2 = `radioButton -label \"使用时间轴长度\"`;\n\n\tradioCollection -e -select $cMradio1_2 cMraiod1;\n\t\nsetParent cMtopForm;\n\nrowColumnLayout -nc 2 -cw 1 55 -cw 2 80 cMrow2;\n\n\ttext -l \"开始帧\";\n\ttextField -text \"1\" cMstart;\n\ttext -l \"结束帧\";\n\ttextField -text \"30\" cMend;\n\nsetParent cMtopForm;\n\nframeLayout -bs \"out\" -h 2 cMSep1;\n\nsetParent cMtopForm;\n\t\n \tfloatSliderGrp -pre 2 -label \"定位点大小\" -field true -minValue 0.01 -maxValue 10 -v 0.01 cMslide;\n\t\n\tcheckBox -l \"设置曲线不可选\" -v 0 cMcbox;\n\n\tcolorIndexSliderGrp -label \"曲线颜色\" -min 0 -max 31 -value 14 -en true cMslide2;\n\n\tcheckBox -l \"设置曲线颜色和物体颜色相同\" -v 0 cMcbox2;\n\n\tcheckBox -l \"设置曲线和物体同时显示和隐藏\" -v 0 cMcbox3;\n\n\tcheckBox -l \"设置定位点为小球\" -v 1 cMcbox4;\n\n\tcolorIndexSliderGrp -label \"定位点颜色\" -min 0 -max 31 -value 17 -en true cMslide3;\n\n\nrowColumnLayout -nc 3 -cw 1 180 -cw 2 180 -cw 3 180 cMbutrow;\n\nbutton -l \"创建曲线\" -c \"getcMPrefs 1\" -h 27 ;\nbutton -l \"应用\" -c \"getcMPrefs 0\";\nbutton -l \"关闭\" -c \"deleteUI cMTrailWin\";\n\nsetParent cMtopForm;\n\nformLayout -e\n\n\t-attachForm cMrow1 \"left\" 100\n\t-attachForm cMrow1 \"top\" 3\n\n\t-attachForm cMrow2 \"left\" 111\n\t-attachForm cMrow2 \"top\" 20\n\n\t-attachForm cMSep1 \"left\" 0\n\t-attachForm cMSep1 \"right\" 0\n\t-attachForm cMSep1 \"top\" 70\n\n\t-attachForm cMslide \"left\" 25\n\t-attachForm cMslide \"top\" 78\n\n\t-attachForm cMslide2 \"left\" 25\n\t-attachForm cMslide2 \"top\" 104\n\t-attachForm cMslide2 \"right\" 140\n\n\t-attachForm cMslide3 \"left\" 25\n\t-attachForm cMslide3 \"top\" 131\n\n\t-attachForm cMcbox \"left\" 164\n\t-attachForm cMcbox \"top\" 177\n\n\t-attachForm cMcbox2 \"left\" 164\n\t-attachForm cMcbox2 \"top\" 159\n\n\t-attachForm cMcbox3 \"left\" 164\n\t-attachForm cMcbox3 \"top\" 196\n\n\t-attachForm cMcbox4 \"left\" 164\n\t-attachForm cMcbox4 \"top\" 215\n\n\t-attachForm cMbutrow \"left\" 5\n\t-attachForm cMbutrow \"bottom\" 5\n\ncMtopForm;\n\nshowWindow;\n\nwindow -e -h 290 cMTrailWin;\n\n}\n\n\n// proc to launch the main function with flags from the UI //\n\n\nglobal proc getcMPrefs( int $closecMwin )\n{\n\n\tint $startTime, $endTime, $template;\n\tfloat $scale;\n\tstring  $trailObjects[];\n\n\n\t\n\tif ( `radioCollection -q -sl cMraiod1` == \"radioButton1\" )\n\t{\n\t\t$startTime = `textField -q -text cMstart`;\n\t\t$endTime = `textField -q -text cMend`;\n\t}\n\telse\n\t{\n\t\t$startTime = `playbackOptions -q -min`;\n\t\t$endTime = `playbackOptions -q -max`;\n\t}\n\n\t$template = `checkBox -q -v cMcbox`;\n\n\t$scale = `floatSliderGrp -q -v cMslide`;\n\n\t$trailObjects = `ls -sl -fl`;\n\n\n\tfor ( $trailObject in $trailObjects )\n\t{\t\n\n\t\tif ( `objExists ( $trailObject + \"_extraNode_t\" + $startTime + $endTime )` == 0 )\n\t\t{\n\t\t\tcMotionTrail $startTime $endTime $scale $trailObject $template;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcatch ( error ( \"a trail already exists for \" + $trailObject + \" from frames \" + $startTime + \" to \" + $endTime ));\n\t\t}\t\n\t}\n\n\tif ( $closecMwin == 1 )\n\t{\n\t\tdeleteUI cMTrailWin;\n\t}\n\n}\n\n// main trail creating proc //\n\n\nglobal proc cMotionTrail ( int $startTime, int $endTime, float $scale, string $trailObject, int $template )\n{\n\n\n// get the name of the object thats going to be trailed, and the trail length //\n\n\nstring $originalName = $trailObject;\n\nint $totalTime = $endTime - $startTime;\n\n$totalTime ++;\n\n\n// clear the array that will be used to group everything together,  and create its index clock that will manage its members //\n\n\tstring $groupArray[];\n\tclear $groupArray;\n\tint $gAClock = 0;\n\n\n// create the extra node needed ( I'm not sure why this node is needed - but it seems that the `getAttr -t` function needs it to successfully evaluate the \n// position of the hiddenTrailObject, when the object being trailed is not a direct child of the world )\n\n\n\t\tgroup -w -em -n ( $trailObject + \"_extraNode_t\" + $startTime + $endTime );\n\n\t\tpointConstraint -offset 0 0 0 -weight 1 $trailObject ( $trailObject + \"_extraNode_t\" + $startTime + $endTime );\n\n\t\t$groupArray[$gAClock] = ( $trailObject + \"_extraNode_t\" + $startTime + $endTime );\n\t\t$gAClock ++;\n\n\t\t$trailObject = ( $trailObject + \"_extraNode_t\" + $startTime + $endTime );\n\n\t\n// create the hidden trail object that will be sampled // \n// note: this is the actual object that the script uses to generate and alter the shape of the cMotion trail. NOT the object the user selected.\n\n\t\n\t\tgroup -w -em -n ( $originalName + \"_hiddenTrailObject_t\" + $startTime + $endTime  );\n\n\t\tconnectAttr ( $originalName + \"_extraNode_t\" + $startTime + $endTime +  \".translateX\" ) ( $originalName + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \".translateX\" );\n\t\tconnectAttr ( $originalName + \"_extraNode_t\" + $startTime + $endTime +  \".translateY\" ) ( $originalName + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \".translateY\" );\n\t\tconnectAttr ( $originalName + \"_extraNode_t\" + $startTime + $endTime +  \".translateZ\" ) ( $originalName + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \".translateZ\" );\n\n\t\t$groupArray[$gAClock] = ( $originalName + \"_hiddenTrailObject_t\" + $startTime + $endTime  );\n\n\t\t$gAClock ++;\n\n\n// prepare the curve data // \n\n\n\t\tfloat $tPosX[], $tPosY[], $tPosZ[];\n\n\t\tclear $tPosX $tPosY $tPosZ;\n\n\t\tint $cMclock = $startTime;\n\n\t\tfor ( $i = 0; $i < $totalTime; $i ++ )\n\t\t{\n\t\t\t$tPosX[$i] = `getAttr -t $cMclock ( $originalName + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \".translateX\" )`;\n\t\t\t$tPosY[$i] = `getAttr -t $cMclock ( $originalName + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \".translateY\" )`;\n\t\t\t$tPosZ[$i] = `getAttr -t $cMclock ( $originalName + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \".translateZ\" )`;\n\n\t\t\t$cMclock ++;\n\t\t}\n\n\t\t\n// create the eval string, and evaluate it to generate the curve // \n\n\n\t\t\tstring $evalMe = \"curve -d 1 \";\n\n\t\t\tint $cMclock = $startTime;\n\n\t\t\tfor ( $i = 0; $i < `size $tPosX`; $i ++ )\n\t\t\t{\n\t\n\t\t\t\t$evalMe = ( $evalMe + \"-p \" + $tPosX[$i] + \" \" + $tPosY[$i] + \" \" + $tPosZ[$i] + \" \" );\n\n\t\t\t}\t\n\n\t\t\t$evalMe = ( $evalMe + \"-n \" + $trailObject + \"_cMotionTrail_curve\" );\n\n\t\t\teval $evalMe;\t\n\n\t\t\t$groupArray[$gAClock] = ( $trailObject + \"_cMotionTrail_curve\" );\n\t\t\t$gAClock ++;\n\n\t\t\t// lock the curve so it cant be accidently moved ( only the group as a whole can be user manipulated );\n\n\t\t\tsetAttr -lock true ( $trailObject + \"_cMotionTrail_curve.tx\" );\n\t\t\tsetAttr -lock true ( $trailObject + \"_cMotionTrail_curve.ty\" );\n\t\t\tsetAttr -lock true ( $trailObject + \"_cMotionTrail_curve.tz\" );\n\n\t\t\tsetAttr -lock true ( $trailObject + \"_cMotionTrail_curve.rx\" );\n\t\t\tsetAttr -lock true ( $trailObject + \"_cMotionTrail_curve.ry\" );\n\t\t\tsetAttr -lock true ( $trailObject + \"_cMotionTrail_curve.rz\" );\n\n\t\t\tsetAttr -lock true ( $trailObject + \"_cMotionTrail_curve.sx\" );\n\t\t\tsetAttr -lock true ( $trailObject + \"_cMotionTrail_curve.sy\" );\n\t\t\tsetAttr -lock true ( $trailObject + \"_cMotionTrail_curve.sz\" );\n\n\t\t\t// set the user colours of the curve\n\n\t\t\tsetAttr ( $trailObject + \"_cMotionTrail_curve.overrideEnabled\" ) 1;\n\t\t\tsetAttr ( $trailObject + \"_cMotionTrail_curve.overrideColor\" ) ( (`colorIndexSliderGrp -q -value cMslide2`) - 1 );\n\n\n\n\t\t\t// if the user chose `use object colour` and object has override enabled - set its colour //\n\n\t\t\t\tif ( `checkBox -q -v cMcbox2` == 1 || ($originalName + \".overrideEnabled\") == 1 )\n\t\t\t\t{\n\t\t\t\t\tsetAttr ( $trailObject + \"_cMotionTrail_curve.overrideColor\" ) ( `getAttr ( $originalName + \".overrideColor\" )`);\n\t\t\t\t}\n\n\n// rename the curve's shape node for easy access // \n\n\n\t\t\tstring $findShape[];\n\n\t\t\t$findShape = `listRelatives ( $trailObject + \"_cMotionTrail_curve\" )`;\n\n\t\t\trename $findShape[0] ( $trailObject + \"_cMotionTrailShape\" );\n\n\n// create the eval string to make the scriptjob that will update each CV position on the curve // \n\n\n\t\t\tstring $evalMeExpr = \"\";\n\n\t\t\tint $cMclock = $startTime;\n\n\t\t\tfor ( $i = 0; $i < `size $tPosX `; $i ++ )\n\t\t\t{\n\n\t\t\t\t$evalMeExpr = ( $evalMeExpr + \"setAttr \\\\\\\"\" + $trailObject + \"_cMotionTrailShape\" + \".controlPoints[\" + $i + \"].xValue\\\\\\\" ( `getAttr -t \" + $cMclock + \" \" + $trailObject + \".tx`);\" );\n\t\t\t\t$evalMeExpr = ( $evalMeExpr + \"setAttr \\\\\\\"\" + $trailObject + \"_cMotionTrailShape\" + \".controlPoints[\" + $i + \"].yValue\\\\\\\" ( `getAttr -t \" + $cMclock + \" \" + $trailObject + \".ty`);\" );\n\t\t\t\t$evalMeExpr = ( $evalMeExpr + \"setAttr \\\\\\\"\" + $trailObject + \"_cMotionTrailShape\" + \".controlPoints[\" + $i + \"].zValue\\\\\\\" ( `getAttr -t \" + $cMclock + \" \" + $trailObject + \".tz`);\" );\n\t\t\t\t\n\t\t\t\t$cMclock ++;\n\t\t\t}\n\n\n\t\t\t// create the scriptJob to connect the update to a change in the trail null's translate attributes //\n\n\t\t\t// note: for efficiency this scriptjob checks the current frame number and compares it with a previous stored frame number ( from a dynamically generated\n\t\t\t// global variable ). The scriptjob will only run if these 2 values are the same ( so the scriptJob will ONLY evaluate when the user physically makes a \n\t\t\t// change in the scene, rather than evaluating each time the user scrubs the timeslider, or steps through the timeSlider. )\n\t\t\n\t\t\tint $randTag = `rand 999999`;\n\n\t\t\t$evalMeExpr = ( \"$cmtsc\" + $randTag + \"_sJob1 = `scriptJob -kws -cu true -ac \\\"\" + $originalName + \"_hiddenTrailObject_t\" + $startTime + $endTime + \".translate\\\" \\\"\" + \n\n\t\t\t\"global int $cmtscDG\" + $randTag + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \"r2; $r1 = `currentTime -q`; if ( $r1 == $cmtscDG\" + $randTag + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \"r2 ) {\" + $evalMeExpr); \n\n\t\t\t$evalMeExpr = ( $evalMeExpr + \" print \\\\\\\"\\\\\\\";  }else{ $cmtscDG\" + $randTag + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \"r2 = `currentTime -q`; } \\\"`\" );\n\n\t\t\teval $evalMeExpr;\n\n\n\n// create the spacing locators and connect them to each point on the curve // \n\n// note: for efficiency, the spacing locators are connected directly to each CV in the curve, much faster than depending on the scriptJob \n// to also update all their positions.\n\n\n\t\t\tint $cMclock = $startTime;\n\n\t\t\tfor ( $i = 0; $i < `size $tPosX `; $i ++ )\n\t\t\t{\n\n\t\t\t\t$tPosX[$i] = `getAttr -t $startTime ( $originalName + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \".translateX\" )`;\n\t\t\t\t$tPosY[$i] = `getAttr -t $startTime ( $originalName + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \".translateY\" )`;\n\t\t\t\t$tPosZ[$i] = `getAttr -t $startTime ( $originalName + \"_hiddenTrailObject_t\" +  $startTime + $endTime + \".translateX\" )`;\n\t\t\t\t\n\n\t\t\t\tif ( `checkBox -q -v cMcbox4` == 0 )\n\t\t\t\t{\n\t\t\t\t\tspaceLocator -n ( $trailObject + \"_spacingLocator_\" + $i );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsphere -p 0 0 0 -ax 0 1 0 -ssw 0 -esw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 4 -nsp 2 -ch 1 -n ( $trailObject + \"_spacingLocator_\" + $i );\n\t\t\t\t\tsetAttr ( $trailObject + \"_spacingLocator_\" + $i + \".overrideShading\" ) 0 ;\n\t\t\t\t}\n\t\n\t\t\t\tscale -r $scale $scale $scale;\n\n\t\t\t\txform -ws -t $tPosX[$i] $tPosY[$i] $tPosZ[$i];\t\n\n\t\t\t\tconnectAttr  ( $trailObject + \"_cMotionTrailShape\" + \".controlPoints[\" + $i + \"].xValue\" ) ( $trailObject + \"_spacingLocator_\" + $i + \".tx\" );\n\t\t\t\tconnectAttr  ( $trailObject + \"_cMotionTrailShape\" + \".controlPoints[\" + $i + \"].yValue\" ) ( $trailObject + \"_spacingLocator_\" + $i + \".ty\" );\n\t\t\t\tconnectAttr  ( $trailObject + \"_cMotionTrailShape\" + \".controlPoints[\" + $i + \"].zValue\" ) ( $trailObject + \"_spacingLocator_\" + $i + \".tz\" );\t\n\n\t\t\t\t$groupArray[$gAClock] = ( $trailObject + \"_spacingLocator_\" + $i );\n\t\t\t\t$gAClock ++;\n\n\t\t\t\t$cMclock ++;\n\n\t\t\t\tsetAttr ( $trailObject + \"_spacingLocator_\" + $i + \".overrideEnabled\" ) 1;\n\t\t\t\tsetAttr ( $trailObject + \"_spacingLocator_\" + $i + \".overrideColor\" ) ( (`colorIndexSliderGrp -q -value cMslide3`) - 1 );\n\t\t\t}\n\n\n// create the final group of everything that was created, and set its user template value //\n\n\n\t\tselect -r $groupArray;\n\t\tgroup -n ( $originalName + \"_cMotionTrail_\" + $startTime + \"to\" + $endTime ); \n\n\t\tsetAttr ( $originalName + \"_cMotionTrail_\" + $startTime + \"to\" + $endTime + \".template\") $template;\n\t\tselect -cl;\n\n\t\tif ( `checkBox -q -v cMcbox3` == 1 )\n\t\t{\n\t\t\tcatch ( `connectAttr ( $originalName + \".visibility\" ) ( $originalName + \"_cMotionTrail_\" + $startTime + \"to\" + $endTime + \".visibility \") `);\n\t\t}\n\n}\ncMotionTrailUI;\n" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "select -r Bongbong_body_back_ctr ;\nselect -tgl Bongbong_L_F_limit_ctr ;\nselect -tgl Bongbong_R_F_limit_ctr ;" 
        -enableBackground 0
        -align "center" 
        -label "select -r Bongbong_body_back_ctr ;\nselect -tgl Bongbong_L_F_limi..." 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "select -r Bongbong_body_back_ctr ;\nselect -tgl Bongbong_L_F_limit_ctr ;\nselect -tgl Bongbong_R_F_limit_ctr ;" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "List the objects in the scene" 
        -enableBackground 0
        -align "center" 
        -label "Outliner" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Outl" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "menuIconWindow.png" 
        -image1 "menuIconWindow.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "OutlinerWindow" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "  global proc autoTangent()\n{\n    global string $aTan_version ;\n\n    if (`window -q -ex autoTangentWin`)\n        {\n        showWindow autoTangentWin ;\n        return ;\n        }\n\n\n\t// Load Prefs\n    float $soft = 0.0 ;\n\tint $bFlatten = 0 ;\n    if(`optionVar -ex \"aTan_softness\"`)\n\t\t$soft = `optionVar -q \"aTan_softness\"` * 100.0 ;\n    if(`optionVar -ex \"aTan_flatten\"`)\n\t\t$bFlatten = `optionVar -q \"aTan_flatten\"` ;\n\n\n\t// Make Window\n    window -w 200 -h 125 -t (\"autoTangent - \"+$aTan_version) -in \"autoTangent\" autoTangentWin;\n    columnLayout ;\n    \n    separator -style \"in\" -w 200 -h 5 ; \n\tcheckBox -l \"Flatten Start/End Keys\" -v $bFlatten cbFlatten ;\n    floatSliderGrp -label \"Softness:\" -field true -min 0.0 -max 100.0 -v $soft -adj 3 -cw3 60 40 90 -cc (\"aTan_start();\") fsgSoft;\n    button -l (\"Auto Tangent Selected Keys\") -al \"center\" -w 180 -c (\"aTan_start();\") btnTan;\n    separator -style \"in\" -w 200 -h 5 ; \n    text -l (\"Copyright ?003-2005 Michael B. Comet\");\n    text -l (\"All Rights Reserved\") ;\n    \n    showWindow autoTangentWin ;\n\n}\n\n// --------------------------------------------------------------------------\n\n/*\n * aTan_start() - Wrapper for start from UI.\n */\nglobal proc aTan_start()\n{\n    float $soft = `floatSliderGrp -q -v fsgSoft` / 100.0 ;\n\tint $bFlatten = `checkBox -q -v cbFlatten` ;\n\n    // Store in option var too!\n    optionVar -fv \"aTan_softness\" $soft ;\n    optionVar -iv \"aTan_flatten\" $bFlatten ;\n\n    // Make it so!\n    aTan_smoothKeys($soft, $bFlatten) ;\n    \n}\n\n\n// --------------------------------------------------------------------------\n\n/*\n * aTan_smoothKeys() - Does actual smooth work\n */\nglobal proc aTan_smoothKeys(float $softness, int $bFlatten)\n{\n    string $curves[] = `keyframe -q -name -sl` ; // get all selected animCurve Nodes\n    string $crv ;\n    \n    waitCursor -state on ;\n    \n    \t// For each curve...\n    for ($crv in $curves)\n        {\n        \t// What key indexes 0..1..2..n for that curve are chosen?\n        \t//\n        int $idxs[] = `keyframe -q -indexValue -sl $crv` ;\n        int $idx ;\n        \n        for ($idx in $idxs)\n            {\n\t\t\t// How many keys on this curve?\n\t\t\tint $total = `keyframe -q -keyframeCount $crv` ;\n\t\t\t\n\t\t\t// Figure current Time and Value\n\t\t\t//\n\t\t\tfloat $valCs[] = `keyframe -index $idx -q -valueChange $crv` ;\n\t\t\tfloat $timeCs[] = `keyframe -index $idx -q -timeChange $crv` ;\n\t\t\t\n\t\t\tfloat $valPs[] = $valCs ;\n\t\t\tfloat $valNs[] = $valCs ;\n\t\t\tfloat $timePs[] = $timeCs ;\n\t\t\tfloat $timeNs[] = $timeCs ;\n\t\t\t\n\t\t\t// Figure prev Time and Value\n\t\t\t//\n\t\t\tif ($idx > 0)\n\t\t\t\t{\n\t\t\t$valPs = `keyframe -index ($idx-1) -q -valueChange $crv` ;\n\t\t\t$timePs = `keyframe -index ($idx-1) -q -timeChange $crv` ;\n\t\t\t}\n\t\t\t   \n\t\t\t// Figure next Time and Value\n\t\t\t//\n\t\t\tif ($idx < $total-1)\n\t\t\t\t{\n\t\t\t$valNs = `keyframe -index ($idx+1) -q -valueChange $crv` ;\n\t\t\t$timeNs = `keyframe -index ($idx+1) -q -timeChange $crv` ;\n\t\t\t}\n\t\t\t\n\t\t\tfloat $valC = $valCs[0] ;\n\t\t\tfloat $valP = $valPs[0] ;\n\t\t\tfloat $valN = $valNs[0] ;\n\t\t\tfloat $timeC = $timeCs[0] ;\n\t\t\tfloat $timeP = $timePs[0] ;\n\t\t\tfloat $timeN = $timeNs[0] ;\n\t\t\t\n\t\t\t// Make start/end keys nice and not flat\n\t\t\tif ($idx == 0 && !$bFlatten)\n\t\t\t\t{\n\t\t\t\t$timeP = $timeC - ($timeN - $timeC) ;\n\t\t\t\t$valP = $valC - ($valN - $valC) ;\n\t\t\t\t}\n\t\t\telse if ($idx == ($total-1) && !$bFlatten)\n\t\t\t\t{\n\t\t\t\t$timeN = $timeC + ($timeC - $timeP) ;\n\t\t\t\t$valN = $valC + ($valC - $valP) ;\n\t\t\t\t}\n\t\t\t\t\n\t\n\t\t\t// Now we have all the basic data we need of current and prev and next\n\t\t\t// key times and values... so use that to adjust the current tangents.\n\t\t\t//\n\t//\t    print (\"// valC=\"+$valC+\" timeC=\"+$timeC+\" //\\n\") ;\n\t//\t    print (\"// valP=\"+$valP+\" timeP=\"+$timeP+\" //\\n\") ;\n\t//\t    print (\"// valN=\"+$valN+\" timeN=\"+$timeN+\" //\\n\") ;\n\t\n\t\t\t// Compare changes in value\n\t\t\tfloat $valIn = $valC - $valP ;\n\t\t\tfloat $valOut = $valN - $valC ;\n\t\n\t\t\t// Compare changes in time\n\t\t\tfloat $timeIn = $timeC - $timeP ;\n\t\t\tfloat $timeOut = $timeN - $timeC ;\n\t\t\t\n\t\t\t\t// Figure slopes\n\t\t\tfloat $slopeIn = 0 ;\n\t\t\tfloat $slopeOut = 0 ;\n\t\t\tif ($timeIn != 0)\n\t\t\t\t$slopeIn = $valIn / $timeIn ;\n\t\t\tif ($timeOut != 0)\n\t\t\t\t$slopeOut = $valOut / $timeOut ;\n\t\n\t//\t    print (\"// slopeIn=\"+$slopeIn+\" slopeOut=\"+$slopeOut+\" //\\n\") ;\t\n\t\n\t\t\t   // Now set power to be more of whichever one has LESS slope\n\t\t\tfloat $powIn = 0.5, $powOut = 0.5;\n\t\t\t\n\t\t\tif ($slopeIn + $slopeOut != 0)\n\t\t\t\t$powIn = 1.0 - ( abs($slopeIn) / ( abs($slopeIn) + abs($slopeOut) ) ) ;\n\t\t\t$powOut = 1.0 - $powIn ;\n\t\n\t\t\t// Now use softness value so that as it goes to 1, we reset the\n\t\t\t// weight power evenly to 0.5... so that it becomes more like smooth.\n\t\t\t//\n\t\t\t$powIn = ((1.0 - $softness) * $powIn ) + ($softness * 0.5) ;\n\t\t\t$powOut = ((1.0 - $softness) * $powOut ) + ($softness * 0.5) ;\n\t\n\t//\t    print (\"// powIn=\"+$powIn+\" powOut=\"+$powOut+\" //\\n\") ;\t\n\t\t\n\t\t\tfloat $newSlope = ( $powIn * $slopeIn ) + ( $powOut * $slopeOut ) ;\n\t\n\t//\t    print (\"// newSlope=\"+$newSlope+\" //\\n\") ;\t\n\t\t\t\n\t\t\tfloat $ang = atan( $newSlope ) * 180.0 / 3.14159 ;\n\t\n\t//\t    print (\"// ang=\"+$ang+\" //\\n\") ;\t\n\t\t\t\n\t\t\t\t// Update the tangents\n\t\t\tkeyTangent -itt spline -ott spline -time $timeC $crv ;\n\t\t\tkeyTangent -ia $ang -oa $ang -time $timeC $crv ;\n\t\t\t\n\t\t\t\t// Also does this use weighted tangents?\n\t\t\tint $wts[] = `keyTangent -q -wt $crv` ;\n\t\t\tif ($wts[0] == 1)\n\t\t\t\t{\n\t\t\t\tfloat $inWt = abs($timeIn) / 3.0 ;\n\t\t\t\tfloat $outWt = abs($timeOut) / 3.0 ;\n\t\t\t\tkeyTangent -iw $inWt -ow $outWt -time $timeC $crv ;\n\t\t\t\t}\n\t\t\t}\t// end of each idx\n    \n        } // end of each curve\n    \n    waitCursor -state off ;\n    \n    print (\"// autoTangent Done. //\\n\") ;\n    \n}\n\nautoTangent();" 
        -enableBackground 0
        -align "center" 
        -label "  global proc autoTangent()\n{\n    global string $aTan_version ;\n..." 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "KX" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "  global proc autoTangent()\n{\n    global string $aTan_version ;\n\n    if (`window -q -ex autoTangentWin`)\n        {\n        showWindow autoTangentWin ;\n        return ;\n        }\n\n\n\t// Load Prefs\n    float $soft = 0.0 ;\n\tint $bFlatten = 0 ;\n    if(`optionVar -ex \"aTan_softness\"`)\n\t\t$soft = `optionVar -q \"aTan_softness\"` * 100.0 ;\n    if(`optionVar -ex \"aTan_flatten\"`)\n\t\t$bFlatten = `optionVar -q \"aTan_flatten\"` ;\n\n\n\t// Make Window\n    window -w 200 -h 125 -t (\"autoTangent - \"+$aTan_version) -in \"autoTangent\" autoTangentWin;\n    columnLayout ;\n    \n    separator -style \"in\" -w 200 -h 5 ; \n\tcheckBox -l \"Flatten Start/End Keys\" -v $bFlatten cbFlatten ;\n    floatSliderGrp -label \"Softness:\" -field true -min 0.0 -max 100.0 -v $soft -adj 3 -cw3 60 40 90 -cc (\"aTan_start();\") fsgSoft;\n    button -l (\"Auto Tangent Selected Keys\") -al \"center\" -w 180 -c (\"aTan_start();\") btnTan;\n    separator -style \"in\" -w 200 -h 5 ; \n    text -l (\"Copyright ?003-2005 Michael B. Comet\");\n    text -l (\"All Rights Reserved\") ;\n    \n    showWindow autoTangentWin ;\n\n}\n\n// --------------------------------------------------------------------------\n\n/*\n * aTan_start() - Wrapper for start from UI.\n */\nglobal proc aTan_start()\n{\n    float $soft = `floatSliderGrp -q -v fsgSoft` / 100.0 ;\n\tint $bFlatten = `checkBox -q -v cbFlatten` ;\n\n    // Store in option var too!\n    optionVar -fv \"aTan_softness\" $soft ;\n    optionVar -iv \"aTan_flatten\" $bFlatten ;\n\n    // Make it so!\n    aTan_smoothKeys($soft, $bFlatten) ;\n    \n}\n\n\n// --------------------------------------------------------------------------\n\n/*\n * aTan_smoothKeys() - Does actual smooth work\n */\nglobal proc aTan_smoothKeys(float $softness, int $bFlatten)\n{\n    string $curves[] = `keyframe -q -name -sl` ; // get all selected animCurve Nodes\n    string $crv ;\n    \n    waitCursor -state on ;\n    \n    \t// For each curve...\n    for ($crv in $curves)\n        {\n        \t// What key indexes 0..1..2..n for that curve are chosen?\n        \t//\n        int $idxs[] = `keyframe -q -indexValue -sl $crv` ;\n        int $idx ;\n        \n        for ($idx in $idxs)\n            {\n\t\t\t// How many keys on this curve?\n\t\t\tint $total = `keyframe -q -keyframeCount $crv` ;\n\t\t\t\n\t\t\t// Figure current Time and Value\n\t\t\t//\n\t\t\tfloat $valCs[] = `keyframe -index $idx -q -valueChange $crv` ;\n\t\t\tfloat $timeCs[] = `keyframe -index $idx -q -timeChange $crv` ;\n\t\t\t\n\t\t\tfloat $valPs[] = $valCs ;\n\t\t\tfloat $valNs[] = $valCs ;\n\t\t\tfloat $timePs[] = $timeCs ;\n\t\t\tfloat $timeNs[] = $timeCs ;\n\t\t\t\n\t\t\t// Figure prev Time and Value\n\t\t\t//\n\t\t\tif ($idx > 0)\n\t\t\t\t{\n\t\t\t$valPs = `keyframe -index ($idx-1) -q -valueChange $crv` ;\n\t\t\t$timePs = `keyframe -index ($idx-1) -q -timeChange $crv` ;\n\t\t\t}\n\t\t\t   \n\t\t\t// Figure next Time and Value\n\t\t\t//\n\t\t\tif ($idx < $total-1)\n\t\t\t\t{\n\t\t\t$valNs = `keyframe -index ($idx+1) -q -valueChange $crv` ;\n\t\t\t$timeNs = `keyframe -index ($idx+1) -q -timeChange $crv` ;\n\t\t\t}\n\t\t\t\n\t\t\tfloat $valC = $valCs[0] ;\n\t\t\tfloat $valP = $valPs[0] ;\n\t\t\tfloat $valN = $valNs[0] ;\n\t\t\tfloat $timeC = $timeCs[0] ;\n\t\t\tfloat $timeP = $timePs[0] ;\n\t\t\tfloat $timeN = $timeNs[0] ;\n\t\t\t\n\t\t\t// Make start/end keys nice and not flat\n\t\t\tif ($idx == 0 && !$bFlatten)\n\t\t\t\t{\n\t\t\t\t$timeP = $timeC - ($timeN - $timeC) ;\n\t\t\t\t$valP = $valC - ($valN - $valC) ;\n\t\t\t\t}\n\t\t\telse if ($idx == ($total-1) && !$bFlatten)\n\t\t\t\t{\n\t\t\t\t$timeN = $timeC + ($timeC - $timeP) ;\n\t\t\t\t$valN = $valC + ($valC - $valP) ;\n\t\t\t\t}\n\t\t\t\t\n\t\n\t\t\t// Now we have all the basic data we need of current and prev and next\n\t\t\t// key times and values... so use that to adjust the current tangents.\n\t\t\t//\n\t//\t    print (\"// valC=\"+$valC+\" timeC=\"+$timeC+\" //\\n\") ;\n\t//\t    print (\"// valP=\"+$valP+\" timeP=\"+$timeP+\" //\\n\") ;\n\t//\t    print (\"// valN=\"+$valN+\" timeN=\"+$timeN+\" //\\n\") ;\n\t\n\t\t\t// Compare changes in value\n\t\t\tfloat $valIn = $valC - $valP ;\n\t\t\tfloat $valOut = $valN - $valC ;\n\t\n\t\t\t// Compare changes in time\n\t\t\tfloat $timeIn = $timeC - $timeP ;\n\t\t\tfloat $timeOut = $timeN - $timeC ;\n\t\t\t\n\t\t\t\t// Figure slopes\n\t\t\tfloat $slopeIn = 0 ;\n\t\t\tfloat $slopeOut = 0 ;\n\t\t\tif ($timeIn != 0)\n\t\t\t\t$slopeIn = $valIn / $timeIn ;\n\t\t\tif ($timeOut != 0)\n\t\t\t\t$slopeOut = $valOut / $timeOut ;\n\t\n\t//\t    print (\"// slopeIn=\"+$slopeIn+\" slopeOut=\"+$slopeOut+\" //\\n\") ;\t\n\t\n\t\t\t   // Now set power to be more of whichever one has LESS slope\n\t\t\tfloat $powIn = 0.5, $powOut = 0.5;\n\t\t\t\n\t\t\tif ($slopeIn + $slopeOut != 0)\n\t\t\t\t$powIn = 1.0 - ( abs($slopeIn) / ( abs($slopeIn) + abs($slopeOut) ) ) ;\n\t\t\t$powOut = 1.0 - $powIn ;\n\t\n\t\t\t// Now use softness value so that as it goes to 1, we reset the\n\t\t\t// weight power evenly to 0.5... so that it becomes more like smooth.\n\t\t\t//\n\t\t\t$powIn = ((1.0 - $softness) * $powIn ) + ($softness * 0.5) ;\n\t\t\t$powOut = ((1.0 - $softness) * $powOut ) + ($softness * 0.5) ;\n\t\n\t//\t    print (\"// powIn=\"+$powIn+\" powOut=\"+$powOut+\" //\\n\") ;\t\n\t\t\n\t\t\tfloat $newSlope = ( $powIn * $slopeIn ) + ( $powOut * $slopeOut ) ;\n\t\n\t//\t    print (\"// newSlope=\"+$newSlope+\" //\\n\") ;\t\n\t\t\t\n\t\t\tfloat $ang = atan( $newSlope ) * 180.0 / 3.14159 ;\n\t\n\t//\t    print (\"// ang=\"+$ang+\" //\\n\") ;\t\n\t\t\t\n\t\t\t\t// Update the tangents\n\t\t\tkeyTangent -itt spline -ott spline -time $timeC $crv ;\n\t\t\tkeyTangent -ia $ang -oa $ang -time $timeC $crv ;\n\t\t\t\n\t\t\t\t// Also does this use weighted tangents?\n\t\t\tint $wts[] = `keyTangent -q -wt $crv` ;\n\t\t\tif ($wts[0] == 1)\n\t\t\t\t{\n\t\t\t\tfloat $inWt = abs($timeIn) / 3.0 ;\n\t\t\t\tfloat $outWt = abs($timeOut) / 3.0 ;\n\t\t\t\tkeyTangent -iw $inWt -ow $outWt -time $timeC $crv ;\n\t\t\t\t}\n\t\t\t}\t// end of each idx\n    \n        } // end of each curve\n    \n    waitCursor -state off ;\n    \n    print (\"// autoTangent Done. //\\n\") ;\n    \n}\n\nautoTangent();" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Edit the references for the current scene" 
        -enableBackground 0
        -align "center" 
        -label "Reference Editor" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "RE" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "menuIconFile.png" 
        -image1 "menuIconFile.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "ReferenceEditor" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "select -r Move_Master Main FKMiddleFinger1_R FKMiddleFinger2_R FKMiddleFinger3_R FKThumbFinger1_R FKThumbFinger2_R FKThumbFinger3_R FKIndexFinger1_R FKIndexFinger2_R FKIndexFinger3_R FKPinkyFinger1_R FKPinkyFinger2_R FKPinkyFinger3_R FKRingFinger1_R FKRingFinger2_R FKRingFinger3_R FKMiddleToe1_R FKScapula_R FKShoulder_R FKElbow_R FKWrist_R FKHead_M FKEye_R FKJaw_M FKEye_L aaa:bkHairDyn_anim FKScapula_L FKShoulder_L FKElbow_L FKWrist_L FKMiddleFinger1_L FKMiddleFinger2_L FKMiddleFinger3_L FKThumbFinger1_L FKThumbFinger2_L FKThumbFinger3_L FKIndexFinger1_L FKIndexFinger2_L FKIndexFinger3_L FKPinkyFinger1_L FKPinkyFinger2_L FKPinkyFinger3_L FKRingFinger1_L FKRingFinger2_L FKRingFinger3_L FKMiddleToe1_L Fingers_R Fingers_L Center_M FKBackA_M FKBackB_M FKChest_M HipSwingerRoot_M IKLeg_R IKLegHeel_R IKLegToe_R IKLegBall_R PoleLeg_R IKLeg_L IKLegHeel_L IKLegToe_L IKLegBall_L PoleLeg_L FKIKArm_R FKIKLeg_R FKIKSpine_M FKIKArm_L FKIKLeg_L AimEye_M hair_R_b_Jnt1_crv hair_R_b_Jnt2_crv hair_R_b_Jnt3_crv hair_R_Jnt1_crv hair_R_Jnt2_crv hair_R_Jnt3_crv hair_R_c_Jnt1_crv hair_R_c_Jnt2_crv hair_R_c_Jnt3_crv hair_b_Jnt1_crv hair_b_Jnt2_crv hair_b_Jnt3_crv hair_L_d_Jnt1_crv hair_L_d_Jnt2_crv hair_L_d_Jnt3_crv hair_L_c_Jnt1_crv hair_L_c_Jnt2_crv hair_L_c_Jnt3_crv hair_L_b_Jnt1_crv hair_L_b_Jnt2_crv hair_L_b_Jnt3_crv hair_L_Jnt1_crv hair_L_Jnt2_crv hair_L_Jnt3_crv hair_f_Jnt1_crv hair_f_Jnt2_crv hair_f_Jnt3_crv f_hair_up_Jnt1_crv f_hair_up_Jnt2_crv f_hair_m_Jnt1_crv f_hair_m_Jnt2_crv f_hair_dwn_Jnt1_crv f_hair_dwn_Jnt2_crv NeckLake_f_m_crv NeckLake_b_m_crv R_NeckLake_c_crv L_NeckLake_c_crv R_NeckLake_a_crv L_NeckLake_a_crv L_NeckLake_b_crv R_NeckLake_b_crv Tail_Jnt1_crv Tail_Jnt2_crv Expression_Control R_Eyebrows_Control Squint_Control L_Eyebrows_Control Smile_Control Sneer_Active Grimace_SubControl Sneer_SubControl bigsmile_Control Lips_Control Jaw_Control R_up_eye_Control L_up_eye_Control R_dwn_eye_Control L_dwn_eye_Control R_up_eye_ym_Control L_up_eye_ym_Control A_Control E_Control O_Control M_Control F_Control TH_Control H_Control L_hair_Jnt1CON L_hair_Jnt2CON R_hair_Jnt1CON R_hair_Jnt2CON tangue_a_crv tangue_b_crv tangue_c_crv tangue_d_crv ;\nselect -tgl Move_Master ;\n" 
        -enableBackground 0
        -align "center" 
        -label "select -r Move_Master Main FKMiddleFinger1_R FKMiddleFinger2_R F..." 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "select -r Move_Master Main FKMiddleFinger1_R FKMiddleFinger2_R FKMiddleFinger3_R FKThumbFinger1_R FKThumbFinger2_R FKThumbFinger3_R FKIndexFinger1_R FKIndexFinger2_R FKIndexFinger3_R FKPinkyFinger1_R FKPinkyFinger2_R FKPinkyFinger3_R FKRingFinger1_R FKRingFinger2_R FKRingFinger3_R FKMiddleToe1_R FKScapula_R FKShoulder_R FKElbow_R FKWrist_R FKHead_M FKEye_R FKJaw_M FKEye_L aaa:bkHairDyn_anim FKScapula_L FKShoulder_L FKElbow_L FKWrist_L FKMiddleFinger1_L FKMiddleFinger2_L FKMiddleFinger3_L FKThumbFinger1_L FKThumbFinger2_L FKThumbFinger3_L FKIndexFinger1_L FKIndexFinger2_L FKIndexFinger3_L FKPinkyFinger1_L FKPinkyFinger2_L FKPinkyFinger3_L FKRingFinger1_L FKRingFinger2_L FKRingFinger3_L FKMiddleToe1_L Fingers_R Fingers_L Center_M FKBackA_M FKBackB_M FKChest_M HipSwingerRoot_M IKLeg_R IKLegHeel_R IKLegToe_R IKLegBall_R PoleLeg_R IKLeg_L IKLegHeel_L IKLegToe_L IKLegBall_L PoleLeg_L FKIKArm_R FKIKLeg_R FKIKSpine_M FKIKArm_L FKIKLeg_L AimEye_M hair_R_b_Jnt1_crv hair_R_b_Jnt2_crv hair_R_b_Jnt3_crv hair_R_Jnt1_crv hair_R_Jnt2_crv hair_R_Jnt3_crv hair_R_c_Jnt1_crv hair_R_c_Jnt2_crv hair_R_c_Jnt3_crv hair_b_Jnt1_crv hair_b_Jnt2_crv hair_b_Jnt3_crv hair_L_d_Jnt1_crv hair_L_d_Jnt2_crv hair_L_d_Jnt3_crv hair_L_c_Jnt1_crv hair_L_c_Jnt2_crv hair_L_c_Jnt3_crv hair_L_b_Jnt1_crv hair_L_b_Jnt2_crv hair_L_b_Jnt3_crv hair_L_Jnt1_crv hair_L_Jnt2_crv hair_L_Jnt3_crv hair_f_Jnt1_crv hair_f_Jnt2_crv hair_f_Jnt3_crv f_hair_up_Jnt1_crv f_hair_up_Jnt2_crv f_hair_m_Jnt1_crv f_hair_m_Jnt2_crv f_hair_dwn_Jnt1_crv f_hair_dwn_Jnt2_crv NeckLake_f_m_crv NeckLake_b_m_crv R_NeckLake_c_crv L_NeckLake_c_crv R_NeckLake_a_crv L_NeckLake_a_crv L_NeckLake_b_crv R_NeckLake_b_crv Tail_Jnt1_crv Tail_Jnt2_crv Expression_Control R_Eyebrows_Control Squint_Control L_Eyebrows_Control Smile_Control Sneer_Active Grimace_SubControl Sneer_SubControl bigsmile_Control Lips_Control Jaw_Control R_up_eye_Control L_up_eye_Control R_dwn_eye_Control L_dwn_eye_Control R_up_eye_ym_Control L_up_eye_ym_Control A_Control E_Control O_Control M_Control F_Control TH_Control H_Control L_hair_Jnt1CON L_hair_Jnt2CON R_hair_Jnt1CON R_hair_Jnt2CON tangue_a_crv tangue_b_crv tangue_c_crv tangue_d_crv ;\nselect -tgl Move_Master ;\n" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "C" 
        -enableBackground 0
        -align "center" 
        -label "C" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "C" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "select -r BoyC_L_foot_ctr ;\nselect -tgl BoyC_R_foot_ctr ;\nselect -tgl BoyC_L_leg_Pole_ctr ;\nselect -tgl BoyC_R_leg_Pole_ctr ;\nselect -tgl BoyC_hip_ctr ;\nselect -tgl BoyC_all_body_ctr ;\nselect -tgl BoyC_middle_ctr ;\nselect -tgl BoyC_chest_ctr ;\nselect -tgl BoyC_neck_ctr ;\nselect -tgl BoyC_head_ctr ;\nselect -tgl BoyC_R_sh_ctr ;\nselect -tgl BoyC_L_sh_ctr ;\nselect -tgl BoyC_L_Sh_rot_ctr ;\nselect -tgl BoyC_R_Sh_rot_ctr ;\nselect -tgl BoyC_R_arm_Pole_ctr ;\nselect -tgl BoyC_L_arm_Pole_ctr ;\nselect -tgl BoyC_R_hand_ctr ;\nselect -tgl BoyC_L_hand_ctr ;\nselect -tgl BoyC_L_hand_ro_ctr ;\nselect -tgl BoyC_R_hand_ro_ctr ;" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "BoyD" 
        -enableBackground 0
        -align "center" 
        -label "BoyD" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "BoyD" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "select -tgl BoyD_R_foot_ctr ;\nselect -tgl BoyD_L_foot_ctr ;\nselect -tgl BoyD_L_leg_Pole_ctr ;\nselect -tgl BoyD_R_leg_Pole_ctr ;\nselect -tgl BoyD_all_body_ctr ;\nselect -tgl BoyD_hip_ctr ;\nselect -tgl BoyD_middle_ctr ;\nselect -tgl BoyD_chest_ctr ;\nselect -tgl BoyD_neck_ctr ;\nselect -tgl BoyD_head_ctr ;\nselect -tgl BoyD_R_sh_ctr ;\nselect -tgl BoyD_L_sh_ctr ;\nselect -tgl BoyD_L_Sh_rot_ctr ;\nselect -tgl BoyD_R_Sh_rot_ctr ;\nselect -tgl BoyD_R_arm_Pole_ctr ;\nselect -tgl BoyD_L_arm_Pole_ctr ;\nselect -tgl BoyD_L_hand_ctr ;\nselect -tgl BoyD_R_hand_ctr ;\nselect -tgl BoyD_R_hand_ro_ctr ;\nselect -tgl BoyD_L_hand_ro_ctr ;" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "BoyE" 
        -enableBackground 0
        -align "center" 
        -label "BoyE" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "BoyE" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "select -tgl BoyE_L_foot_ctr ;\nselect -tgl BoyE_R_foot_ctr ;\nselect -tgl BoyE_R_leg_Pole_ctr ;\nselect -tgl BoyE_L_leg_Pole_ctr ;\nselect -tgl BoyE_hip_ctr ;\nselect -tgl BoyE_all_body_ctr ;\nselect -tgl BoyE_middle_ctr ;\nselect -tgl BoyE_chest_ctr ;\nselect -tgl BoyE_neck_ctr ;\nselect -tgl BoyE_head_ctr ;\nselect -tgl BoyE_R_sh_ctr ;\nselect -tgl BoyE_L_sh_ctr ;\nselect -tgl BoyE_L_Sh_rot_ctr ;\nselect -tgl BoyE_R_Sh_rot_ctr ;\nselect -tgl BoyE_RightArm_FK_ctr ;\nselect -tgl BoyE_RightForeArm_FK_ctr ;\nselect -tgl BoyE_R_hand_ro_ctr ;\nselect -tgl BoyE_R_arm_Pole_ctr ;\nselect -tgl BoyE_R_hand_ctr ;\nselect -tgl BoyE_LeftArm_FK_ctr ;\nselect -tgl BoyE_LeftForeArm_FK_ctr ;\nselect -tgl BoyE_L_hand_ro_ctr ;\nselect -tgl BoyE_L_arm_Pole_ctr ;\nselect -tgl BoyE_L_hand_ctr ;" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Duri" 
        -enableBackground 0
        -align "center" 
        -label "Duri" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "Duri" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "select -tgl Duri_kinder_L_foot_ctr ;\nselect -tgl Duri_kinder_R_foot_ctr ;\nselect -tgl Duri_kinder_R_leg_Pole_ctr ;\nselect -tgl Duri_kinder_L_leg_Pole_ctr ;\nselect -tgl Duri_kinder_hip_ctr ;\nselect -tgl Duri_kinder_all_body_ctr ;\nselect -tgl Duri_kinder_middle_ctr ;\nselect -tgl Duri_kinder_chest_ctr ;\nselect -tgl Duri_kinder_neck_ctr ;\nselect -tgl Duri_kinder_head_ctr ;\nselect -tgl Duri_kinder_L_Sh_rot_ctr ;\nselect -tgl Duri_kinder_R_Sh_rot_ctr ;\nselect -tgl Duri_kinder_R_hand_ctr ;\nselect -tgl Duri_kinder_L_hand_ctr ;\nselect -tgl Duri_kinder_L_arm_Pole_ctr ;\nselect -tgl Duri_kinder_R_arm_Pole_ctr ;\nselect -tgl Duri_kinder_L_hand_ro_ctr ;\nselect -tgl Duri_kinder_R_hand_ro_ctr ;\nselect -tgl Duri_kinder_R_sh_ctr ;\nselect -tgl Duri_kinder_L_sh_ctr ;\nselect -tgl Duri_kinder_LeftArm_FK_ctr ;\nselect -tgl Duri_kinder_LeftForeArm_FK_ctr ;\nselect -tgl Duri_kinder_RightArm_FK_ctr ;\nselect -tgl Duri_kinder_RightForeArm_FK_ctr ;" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "select -tgl GirlB_L_foot_ctr ;\nselect -tgl GirlB_R_foot_ctr ;\nselect -tgl GirlB_L_leg_Pole_ctr ;\nselect -tgl GirlB_R_leg_Pole_ctr ;\nselect -tgl GirlB_hip_ctr ;\nselect -tgl GirlB_all_body_ctr ;\nselect -tgl GirlB_middle_ctr ;\nselect -tgl GirlB_chest_ctr ;\nselect -tgl GirlB_neck_ctr ;\nselect -tgl GirlB_head_ctr ;\nselect -tgl GirlB_R_Sh_rot_ctr ;\nselect -tgl GirlB_L_Sh_rot_ctr ;\nselect -tgl GirlB_L_sh_ctr ;\nselect -tgl GirlB_R_sh_ctr ;\nselect -tgl GirlB_L_arm_Pole_ctr ;\nselect -tgl GirlB_R_arm_Pole_ctr ;\nselect -tgl GirlB_R_hand_ctr ;\nselect -tgl GirlB_L_hand_ctr ;\nselect -tgl GirlB_L_hand_ro_ctr ;\nselect -tgl GirlB_R_hand_ro_ctr ;" 
        -enableBackground 0
        -align "center" 
        -label "select -tgl GirlB_L_foot_ctr ;\nselect -tgl GirlB_R_foot_ctr ;\nse..." 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "select -tgl GirlB_L_foot_ctr ;\nselect -tgl GirlB_R_foot_ctr ;\nselect -tgl GirlB_L_leg_Pole_ctr ;\nselect -tgl GirlB_R_leg_Pole_ctr ;\nselect -tgl GirlB_hip_ctr ;\nselect -tgl GirlB_all_body_ctr ;\nselect -tgl GirlB_middle_ctr ;\nselect -tgl GirlB_chest_ctr ;\nselect -tgl GirlB_neck_ctr ;\nselect -tgl GirlB_head_ctr ;\nselect -tgl GirlB_R_Sh_rot_ctr ;\nselect -tgl GirlB_L_Sh_rot_ctr ;\nselect -tgl GirlB_L_sh_ctr ;\nselect -tgl GirlB_R_sh_ctr ;\nselect -tgl GirlB_L_arm_Pole_ctr ;\nselect -tgl GirlB_R_arm_Pole_ctr ;\nselect -tgl GirlB_R_hand_ctr ;\nselect -tgl GirlB_L_hand_ctr ;\nselect -tgl GirlB_L_hand_ro_ctr ;\nselect -tgl GirlB_R_hand_ro_ctr ;" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "select -r Girl_L_foot_ctr ;\nselect -tgl Girl_R_foot_ctr ;\nselect -tgl Girl_R_leg_Pole_ctr ;\nselect -tgl Girl_L_leg_Pole_ctr ;\nselect -tgl Girl_hip_ctr ;\nselect -tgl Girl_all_body_ctr ;\nselect -tgl Girl_middle_ctr ;\nselect -tgl Girl_chest_ctr ;\nselect -tgl Girl_neck_ctr ;\nselect -tgl Girl_head_ctr ;\nselect -tgl Girl_L_sh_ctr ;\nselect -tgl Girl_R_sh_ctr ;\nselect -tgl Girl_R_Sh_rot_ctr ;\nselect -tgl Girl_L_Sh_rot_ctr ;\nselect -tgl Girl_L_arm_Pole_ctr ;\nselect -tgl Girl_R_arm_Pole_ctr ;\nselect -tgl Girl_R_hand_ctr ;\nselect -tgl Girl_L_hand_ctr ;\nselect -tgl Girl_L_hand_ro_ctr ;\nselect -tgl Girl_R_hand_ro_ctr ;" 
        -enableBackground 0
        -align "center" 
        -label "select -r Girl_L_foot_ctr ;\nselect -tgl Girl_R_foot_ctr ;\nselect..." 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "select -r Girl_L_foot_ctr ;\nselect -tgl Girl_R_foot_ctr ;\nselect -tgl Girl_R_leg_Pole_ctr ;\nselect -tgl Girl_L_leg_Pole_ctr ;\nselect -tgl Girl_hip_ctr ;\nselect -tgl Girl_all_body_ctr ;\nselect -tgl Girl_middle_ctr ;\nselect -tgl Girl_chest_ctr ;\nselect -tgl Girl_neck_ctr ;\nselect -tgl Girl_head_ctr ;\nselect -tgl Girl_L_sh_ctr ;\nselect -tgl Girl_R_sh_ctr ;\nselect -tgl Girl_R_Sh_rot_ctr ;\nselect -tgl Girl_L_Sh_rot_ctr ;\nselect -tgl Girl_L_arm_Pole_ctr ;\nselect -tgl Girl_R_arm_Pole_ctr ;\nselect -tgl Girl_R_hand_ctr ;\nselect -tgl Girl_L_hand_ctr ;\nselect -tgl Girl_L_hand_ro_ctr ;\nselect -tgl Girl_R_hand_ro_ctr ;" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Mother" 
        -enableBackground 0
        -align "center" 
        -label "Mother" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "select -r Mother_L_foot_ctr ;\nselect -tgl Mother_R_foot_ctr ;\nselect -tgl Mother_L_leg_Pole_ctr ;\nselect -tgl Mother_R_leg_Pole_ctr ;\nselect -tgl Mother_hip_ctr ;\nselect -tgl Mother_all_body_ctr ;\nselect -tgl Mother_middle_ctr ;\nselect -tgl Mother_chest_ctr ;\nselect -tgl Mother_neck_ctr ;\nselect -tgl Mother_head_ctr ;\nselect -tgl Mother_L_sh_ctr ;\nselect -tgl Mother_R_sh_ctr ;\nselect -tgl Mother_L_Sh_rot_ctr ;\nselect -tgl Mother_R_Sh_rot_ctr ;\nselect -tgl Mother_R_arm_Pole_ctr ;\nselect -tgl Mother_L_arm_Pole_ctr ;\nselect -tgl Mother_R_hand_ctr ;\nselect -tgl Mother_L_hand_ctr ;\nselect -tgl Mother_R_hand_ro_ctr ;\nselect -tgl Mother_L_hand_ro_ctr ;" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Hana" 
        -enableBackground 0
        -align "center" 
        -label "Hana" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "select -r Hana_R_foot_ctr ;\nselect -tgl Hana_L_foot_ctr ;\nselect -tgl Hana_L_leg_Pole_ctr ;\nselect -tgl Hana_R_leg_Pole_ctr ;\nselect -tgl Hana_hip_ctr ;\nselect -tgl Hana_all_body_ctr ;\nselect -tgl Hana_middle_ctr ;\nselect -tgl Hana_chest_ctr ;\nselect -tgl Hana_neck_ctr ;\nselect -tgl Hana_head_ctr ;\nselect -tgl Hana_R_sh_ctr ;\nselect -tgl Hana_L_sh_ctr ;\nselect -tgl Hana_L_Sh_rot_ctr ;\nselect -tgl Hana_R_Sh_rot_ctr ;\nselect -tgl Hana_RightArm_FK_ctr ;\nselect -tgl Hana_LeftArm_FK_ctr ;\nselect -tgl Hana_LeftForeArm_FK_ctr ;\nselect -tgl Hana_RightForeArm_FK_ctr ;\nselect -tgl Hana_R_arm_Pole_ctr ;\nselect -tgl Hana_L_arm_Pole_ctr ;\nselect -tgl Hana_L_hand_ctr ;\nselect -tgl Hana_R_hand_ctr ;\nselect -tgl Hana_R_hand_ro_ctr ;\nselect -tgl Hana_L_hand_ro_ctr ;" 
        -sourceType "mel" 
        -commandRepeatable 1
    ;

} 
